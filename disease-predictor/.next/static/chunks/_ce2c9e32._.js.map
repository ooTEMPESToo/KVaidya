{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\"flex flex-col gap-1.5 px-6 py-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mCAAmC;QAChD,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/command.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { SearchIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\n\nfunction Command({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive>) {\n  return (\n    <CommandPrimitive\n      data-slot=\"command\"\n      className={cn(\n        \"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CommandDialog({\n  title = \"Command Palette\",\n  description = \"Search for a command to run...\",\n  children,\n  ...props\n}: React.ComponentProps<typeof Dialog> & {\n  title?: string\n  description?: string\n}) {\n  return (\n    <Dialog {...props}>\n      <DialogHeader className=\"sr-only\">\n        <DialogTitle>{title}</DialogTitle>\n        <DialogDescription>{description}</DialogDescription>\n      </DialogHeader>\n      <DialogContent className=\"overflow-hidden p-0\">\n        <Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nfunction CommandInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Input>) {\n  return (\n    <div\n      data-slot=\"command-input-wrapper\"\n      className=\"flex h-9 items-center gap-2 border-b px-3\"\n    >\n      <SearchIcon className=\"size-4 shrink-0 opacity-50\" />\n      <CommandPrimitive.Input\n        data-slot=\"command-input\"\n        className={cn(\n          \"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction CommandList({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.List>) {\n  return (\n    <CommandPrimitive.List\n      data-slot=\"command-list\"\n      className={cn(\n        \"max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CommandEmpty({\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\n  return (\n    <CommandPrimitive.Empty\n      data-slot=\"command-empty\"\n      className=\"py-6 text-center text-sm\"\n      {...props}\n    />\n  )\n}\n\nfunction CommandGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Group>) {\n  return (\n    <CommandPrimitive.Group\n      data-slot=\"command-group\"\n      className={cn(\n        \"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CommandSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\n  return (\n    <CommandPrimitive.Separator\n      data-slot=\"command-separator\"\n      className={cn(\"bg-border -mx-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CommandItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof CommandPrimitive.Item>) {\n  return (\n    <CommandPrimitive.Item\n      data-slot=\"command-item\"\n      className={cn(\n        \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CommandShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"command-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AAPA;;;;;;AAeA,SAAS,QAAQ,EACf,SAAS,EACT,GAAG,OAC2C;IAC9C,qBACE,6LAAC,yIAAA,CAAA,UAAgB;QACf,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS;AAgBT,SAAS,cAAc,EACrB,QAAQ,iBAAiB,EACzB,cAAc,gCAAgC,EAC9C,QAAQ,EACR,GAAG,OAIJ;IACC,qBACE,6LAAC,8HAAA,CAAA,SAAM;QAAE,GAAG,KAAK;;0BACf,6LAAC,8HAAA,CAAA,eAAY;gBAAC,WAAU;;kCACtB,6LAAC,8HAAA,CAAA,cAAW;kCAAE;;;;;;kCACd,6LAAC,8HAAA,CAAA,oBAAiB;kCAAE;;;;;;;;;;;;0BAEtB,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACvB,cAAA,6LAAC;oBAAQ,WAAU;8BAChB;;;;;;;;;;;;;;;;;AAKX;MAtBS;AAwBT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;;0BAEV,6LAAC,6MAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;0BACtB,6LAAC,yIAAA,CAAA,UAAgB,CAAC,KAAK;gBACrB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4JACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;MApBS;AAsBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,yIAAA,CAAA,UAAgB,CAAC,IAAI;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBACE,6LAAC,yIAAA,CAAA,UAAgB,CAAC,KAAK;QACrB,aAAU;QACV,WAAU;QACT,GAAG,KAAK;;;;;;AAGf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6LAAC,yIAAA,CAAA,UAAgB,CAAC,KAAK;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0NACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,6LAAC,yIAAA,CAAA,UAAgB,CAAC,SAAS;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,yIAAA,CAAA,UAAgB,CAAC,IAAI;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OAC0B;IAC7B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBAAO,6LAAC,sKAAA,CAAA,OAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;KAJS;AAMT,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,6LAAC,sKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;MAJS;AAMT,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD;IACtD,qBACE,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gbACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;MApBS;AAsBT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,sKAAA,CAAA,SAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-primary/10 animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGf;KARS","debugId":null}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"text-destructive-foreground [&>svg]:text-current *:data-[slot=alert-description]:text-destructive-foreground/80\",\n        // info: \"text-info-foreground border-slate-600/70 [&>svg]:text-current *:data-[slot=alert-title]:text-sky-800 *:data-[slot=alert-description]:text-sky-600\",\n        info: \"text-info-foreground border-info/70 [&>svg]:text-current *:data-[slot=alert-description]:text-info-foreground/80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertTitle, AlertDescription };\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,6JAA6J;YAC7J,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/app/predict/action/getAIGenText.ts"],"sourcesContent":["\"use server\";\n\n//import { HfInference } from \"@huggingface/inference\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// export async function GetAIGenText(prediction: string) {\n//   console.log(\"is this running client or server side\");\n//   try {\n//     const client = new HfInference(process.env.HF_Original_apiKey);\n\n//     const chatCompletion = await client.chatCompletion({\n//       model: \"deepseek-ai/DeepSeek-R1\",\n//       messages: [\n//         {\n//           role: \"user\",\n//           content:\n//             \"Give a brief overview with just the description of the disease and a small cause (3sentences maximum) of the disease:  \" +\n//             prediction,\n//         },\n//       ],\n//       provider: \"fireworks-ai\",\n//       // max_tokens: 500,\n//     });\n\n//     console.log(chatCompletion.choices[0].message);\n\n//     // Get the raw content\n//     let content = chatCompletion.choices[0].message.content;\n//     // Check for failure cases\n//     if (\n//       !content ||\n//       content === \"I am sorry, I do not know the answer to that question.\"\n//     ) {\n//       return {\n//         success: false,\n//         message: \"I am sorry, I do not know the answer to that question.\",\n//       };\n//     }\n\n//     // Remove <think> section\n//     const thinkEndIndex = content.indexOf(\"</think>\");\n//     if (thinkEndIndex !== -1) {\n//       content = content.substring(thinkEndIndex + 8).trim(); // +8 to skip '</think>'\n//     }\n\n//     // Format **{anything}** to bold using <strong> tags\n//     content = content.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n\n//     // Trim and split into sentences, take up to 3\n//     const sentences = content\n//       .trim()\n//       .split(/(?<=\\.)\\s+/)\n//       .filter((s) => s.length > 0)\n//       .slice(0, 3)\n//       .join(\" \");\n//     // Format **{anything}** to bold using <strong> tags\n\n//     // setMessage(chatCompletion.choices[0].message.content);\n//     return {\n//       success: true,\n//       message: sentences,\n//     };\n//   } catch (e) {\n//     console.error(\"Received eror: \", e);\n//     return {\n//       success: false,\n//       message: \"I am sorry, I do not know the answer to that question.\",\n//     };\n//   }\n// }\n\nexport async function GetGeminiGenText(prediction: string) {\n  try {\n    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);\n    const model = genAI.getGenerativeModel({ model: \"gemini-2.0-flash\" });\n\n    const prompt = `Give a brief overview with just the description of the disease and a small cause (3 sentences maximum) of the disease: ${prediction}`;\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    // console.dir(response, { depth: null });\n    const text = response.text();\n\n    // console.log(text);\n    if (!text) {\n      return {\n        success: false,\n        message: \"Failed to get a response from Gemini.\",\n      };\n    }\n\n    // Format **{anything}** to bold using <strong> tags\n    const formattedText = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n\n    // Trim and split into sentences, take up to 3\n    const sentences = formattedText\n      .trim()\n      .split(/(?<=\\.)\\s+/)\n      .filter((s) => s.length > 0)\n      .slice(0, 3)\n      .join(\" \");\n\n    return {\n      success: true,\n      message: sentences,\n    };\n  } catch (error) {\n    console.error(\"Gemini API error:\", error);\n    return {\n      success: false,\n      message: \"Failed to get information. Please try again later.\",\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;IAuEsB","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/app/predict/page.tsx"],"sourcesContent":["\"use client\";\n\n// import { OpenAI } from \"openai\";\nimport { useState, useEffect } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport {\n  Check,\n  ChevronsUpDown,\n  AlertCircle,\n  Loader2,\n  X,\n  MoveUpRight,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { toast } from \"sonner\";\nimport Link from \"next/link\";\nimport {\n  // GetAIGenText,\n  GetGeminiGenText,\n} from \"@/app/predict/action/getAIGenText\";\n\nexport default function PredictPage() {\n  const [symptomsList, setSymptomsList] = useState<string[]>([]);\n  const [selectedSymptoms, setSelectedSymptoms] = useState<string[]>([]);\n  const [prediction, setPrediction] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [fetchingSymptoms, setFetchingSymptoms] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const [message, setMessage] = useState<string>(\"\");\n  const [genLoading, setGenLoading] = useState<boolean>(false);\n  const [genAiError, setGenAiError] = useState<string | null>(null);\n\n  // Format symptom for display\n  const formatSymptom = (symptom: string) => {\n    return symptom\n      .replace(/_/g, \" \")\n      .replace(/\\b\\w/g, (char) => char.toUpperCase());\n  };\n\n  // Fetch available symptoms on mount\n  useEffect(() => {\n    setFetchingSymptoms(true);\n\n    const fetchSymptoms = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/symptoms\");\n        // await new Promise((resolve) => setTimeout(resolve, 10000));\n        if (!res.ok) throw new Error(\"Failed to fetch symptoms\");\n        const data = await res.json();\n        setSymptomsList(data.symptoms);\n      } catch (err) {\n        console.error(\"Error fetching symptoms:\", err);\n        setError(\n          \"Failed to load symptoms. Please check if the server is running.\"\n        );\n      } finally {\n        setFetchingSymptoms(false);\n      }\n    };\n\n    fetchSymptoms();\n  }, []);\n\n  // Handle symptom selection\n  const handleSymptomSelect = (value: string) => {\n    if (!selectedSymptoms.includes(value)) {\n      setSelectedSymptoms((prev) => [...prev, value]);\n    }\n    setOpen(false);\n  };\n\n  // Remove symptom\n  const removeSymptom = (symptom: string) => {\n    setSelectedSymptoms(selectedSymptoms.filter((s) => s !== symptom));\n  };\n\n  // Submit symptoms for prediction\n  const handlePredict = async () => {\n    if (selectedSymptoms.length === 0) {\n      setError(\"Please select at least one symptom\");\n      toast.error(\"Please select at least one symptom\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setPrediction(null);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/predict\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ symptoms: selectedSymptoms }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Prediction request failed\");\n      }\n\n      const data = await response.json();\n      setPrediction(data.disease);\n    } catch (error) {\n      console.error(\"Prediction error:\", error);\n      setError(\"Failed to get prediction. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInformation = async () => {\n    try {\n      setGenLoading(true);\n      setGenAiError(null); // clear previous errors\n      // const res = await GetAIGenText(prediction!);\n\n      const res = await GetGeminiGenText(prediction!);\n\n      if (res.success) {\n        setMessage(res.message);\n      } else {\n        setGenAiError(\"Failed to get information. Please try again later.\");\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any) {\n      setGenAiError(\n        \"Failed to get information. Please try again later.\" + e?.message\n      );\n    } finally {\n      setGenLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-10 px-4\">\n      <div className=\"max-w-3xl mx-auto space-y-8\">\n        <div className=\"text-center space-y-2\">\n          <h1 className=\"text-3xl font-bold\">Disease Prediction</h1>\n          <p className=\"text-muted-foreground\">\n            Select your symptoms to get a potential diagnosis\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"relative\">\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertTitle>Error</AlertTitle>\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n            <X\n              className=\"h-4 w-4 absolute top-2 text-destructive right-2 cursor-pointer\"\n              onClick={() => setError(null)}\n            />\n          </div>\n        )}\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Select Symptoms</CardTitle>\n            <CardDescription>\n              Choose all symptoms you are experiencing\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Popover open={open} onOpenChange={setOpen}>\n              <PopoverTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  role=\"combobox\"\n                  aria-expanded={open}\n                  className=\"w-full justify-between\"\n                  disabled={fetchingSymptoms}\n                >\n                  {fetchingSymptoms ? (\n                    <span className=\"flex items-center\">\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Loading symptoms...\n                    </span>\n                  ) : (\n                    <>\n                      <span>Select a symptom</span>\n                      <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n                    </>\n                  )}\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-full p-0\">\n                <Command>\n                  <CommandInput placeholder=\"Search symptoms...\" />\n                  <CommandList>\n                    <CommandEmpty>No symptom found.</CommandEmpty>\n                    <CommandGroup className=\"max-h-[300px] overflow-y-auto\">\n                      {symptomsList.map((symptom) => (\n                        <CommandItem\n                          key={symptom}\n                          value={symptom}\n                          onSelect={() => handleSymptomSelect(symptom)}\n                        >\n                          <Check\n                            className={cn(\n                              \"mr-2 h-4 w-4\",\n                              selectedSymptoms.includes(symptom)\n                                ? \"opacity-100\"\n                                : \"opacity-0\"\n                            )}\n                          />\n                          {formatSymptom(symptom)}\n                        </CommandItem>\n                      ))}\n                    </CommandGroup>\n                  </CommandList>\n                </Command>\n              </PopoverContent>\n            </Popover>\n\n            <div>\n              <h3 className=\"text-sm font-medium mb-2\">Selected Symptoms:</h3>\n              {selectedSymptoms.length > 0 ? (\n                <div className=\"flex flex-wrap gap-2\">\n                  {selectedSymptoms.map((symptom) => (\n                    <Badge\n                      key={symptom}\n                      variant=\"secondary\"\n                      className=\"flex items-center gap-1\"\n                    >\n                      {formatSymptom(symptom)}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"h-4 w-4 p-0 ml-1 cursor-pointer\"\n                        onClick={() => removeSymptom(symptom)}\n                      >\n                        <X className=\"h-3 w-3\" />\n                        <span className=\"sr-only\">Remove</span>\n                      </Button>\n                    </Badge>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-sm text-muted-foreground\">\n                  No symptoms selected.\n                </p>\n              )}\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button\n              onClick={handlePredict}\n              disabled={loading || fetchingSymptoms}\n              className=\"w-full\"\n            >\n              {loading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Analyzing Symptoms...\n                </>\n              ) : (\n                \"Predict Disease\"\n              )}\n            </Button>\n          </CardFooter>\n        </Card>\n\n        {prediction && (\n          <Card className=\"border-primary/50\">\n            <CardHeader className=\"bg-primary/5 \">\n              <CardTitle>Prediction Result</CardTitle>\n              <CardDescription>\n                Based on your symptoms, our model predicts:\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"pt-6\">\n              <div className=\"text-center py-4\">\n                <Link\n                  href={`https://www.google.com/search?q=${prediction}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-2xl font-bold text-primary mb-2 flex justify-center gap-2 group\"\n                >\n                  {prediction}\n                  <MoveUpRight className=\"h-6 w-6 text-primary group-hover:translate-x-1 group-hover:-translate-y-1 transition-all\" />\n                </Link>\n                <p className=\"text-sm text-muted-foreground\">\n                  This prediction is based on the symptoms you selected and our\n                  machine learning model.\n                </p>\n                <Button\n                  onClick={() => {\n                    handleInformation();\n                  }}\n                  disabled={genLoading}\n                  className=\"mt-4 w-full\"\n                >\n                  {genLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Loading Information...\n                    </>\n                  ) : (\n                    \"Describe the Disease\"\n                  )}\n                </Button>\n\n                {genLoading && (\n                  <div className=\"mt-4\">\n                    <Skeleton className=\"h-[200px] w-full\" />\n                  </div>\n                )}\n                {genAiError && (\n                  <div className=\"relative mt-4\">\n                    <Alert variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertTitle>Error</AlertTitle>\n                      <AlertDescription>{genAiError}</AlertDescription>\n                    </Alert>\n                    <X\n                      className=\"h-4 w-4 absolute top-2 text-destructive right-2 cursor-pointer\"\n                      onClick={() => setError(null)}\n                    />\n                  </div>\n                )}\n                {!genLoading && message && (\n                  <div className=\"mt-4\">\n                    <Alert variant=\"info\">\n                      <AlertTitle className=\"text-[18px] font-semibold mb-2\">\n                        Information about the Disease\n                      </AlertTitle>\n                      <AlertDescription\n                        dangerouslySetInnerHTML={{ __html: message }}\n                      />\n                    </Alert>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex flex-col space-y-2 items-start\">\n              <div className=\"text-sm text-muted-foreground\">\n                <strong>Disclaimer:</strong> This is not a medical diagnosis.\n                Please consult with a healthcare professional.\n              </div>\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setPrediction(null);\n                  setSelectedSymptoms([]);\n                  setMessage(\"\");\n                  setError(null);\n                  setGenAiError(null);\n                }}\n                className=\"w-full\"\n              >\n                Start New Prediction\n              </Button>\n            </CardFooter>\n          </Card>\n        )}\n\n        {fetchingSymptoms && (\n          <div className=\"space-y-3\">\n            <Skeleton className=\"h-[40px] w-full\" />\n            <Skeleton className=\"h-[100px] w-full\" />\n            <Skeleton className=\"h-[40px] w-full\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}