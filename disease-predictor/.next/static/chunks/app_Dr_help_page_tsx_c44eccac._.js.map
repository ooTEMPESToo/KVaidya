{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/app/Dr_help/page.tsx"],"sourcesContent":["// \"use client\";\r\n// import CartView from \"@/components/CartView\";\r\n// import ContactDoctorModal from \"@/components/ContactDoctorModal\";\r\n// import DoctorListAndSearch from \"@/components/DoctorListAndSearch\";\r\n// import Footer from \"@/components/Footer\";\r\n// import Header from \"@/components/Headder\";\r\n// import PaymentModal from \"@/components/PaymentModal\";\r\n// import { useState, useMemo } from \"react\"; // Added useMemo for optimization\r\n\r\n// const initialDoctorsData = [\r\n//   {\r\n//     id: \"1\",\r\n//     name: \"Dr. Sarah Johnson\",\r\n//     specialty: \"Cardiology\",\r\n//     degree: \"MD - Cardiology & Interventional Cardiology\",\r\n//     location: \"Atlanta, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/woman-doctor-wearing-lab-coat-with-stethoscope-isolated_1303-29791.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"sarah.j.contact@ourplatform.com\", // Internal contact through platform\r\n//     availability: \"Mon, Wed, Fri (9 AM - 5 PM)\",\r\n//     fee: 50, // Consultation fee\r\n//   },\r\n//   {\r\n//     id: \"2\",\r\n//     name: \"Dr. Michael Chen\",\r\n//     specialty: \"Hematology\",\r\n//     degree: \"MD - Hematology & Medical Oncology\",\r\n//     location: \"Savannah, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/doctor-with-his-arms-crossed-white-background_1368-5790.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"michael.c.contact@ourplatform.com\",\r\n//     availability: \"Tue, Thu (10 AM - 6 PM)\",\r\n//     fee: 65,\r\n//   },\r\n//   {\r\n//     id: \"3\",\r\n//     name: \"Dr. Emily Rodriguez\",\r\n//     specialty: \"Pulmonology\",\r\n//     degree: \"MD - Pulmonary Disease & Critical Care\",\r\n//     location: \"Augusta, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/portrait-smiling-female-doctor-standing-with-laptop-computer-medical-office_1301-7807.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"emily.r.contact@ourplatform.com\",\r\n//     availability: \"Mon - Thu (8 AM - 4 PM)\",\r\n//     fee: 55,\r\n//   },\r\n//   {\r\n//     id: \"4\",\r\n//     name: \"Dr. James Wilson\",\r\n//     specialty: \"Cardiology\", // Same specialty for testing sort\r\n//     degree: \"MD - Cardiovascular Disease & Internal Medicine\",\r\n//     location: \"Macon, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/medical-workers-covid-19-vaccination-concept-confident-professional-doctor-male-nurse-blue-scrubs-show-thumbs-up-recommend-clinic-service-guarantee-quality-assurance_1258-57360.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"james.w.contact@ourplatform.com\",\r\n//     availability: \"By Appointment Only\",\r\n//     fee: 70,\r\n//   },\r\n//   {\r\n//     id: \"5\",\r\n//     name: \"Dr. Linda Miller\",\r\n//     specialty: \"Pediatrics\",\r\n//     degree: \"MD - General Pediatrics\",\r\n//     location: \"Columbus, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/smiling-young-female-doctor-wearing-medical-robe-with-stethoscope-standing-with-crossed-arms-isolated-pink-wall_141793-10065.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"linda.m.contact@ourplatform.com\",\r\n//     availability: \"Mon - Fri (9 AM - 3 PM)\",\r\n//     fee: 45,\r\n//   }\r\n// ];\r\n\r\n// // Types\r\n// type Doctor = typeof initialDoctorsData[0];\r\n\r\n// const DrHelpPage = () => { // Or whatever you name your page component\r\n//   const [doctors, setDoctors] = useState<Doctor[]>(initialDoctorsData);\r\n//   const [cart, setCart] = useState<Doctor[]>([]);\r\n//   const [activeModal, setActiveModal] = useState<null | 'cart' | 'contact' | 'payment'>(null);\r\n//   const [selectedDoctor, setSelectedDoctor] = useState<Doctor | null>(null);\r\n\r\n//   // All your handler functions (handleAddToCart, handleRemoveFromCart, etc.) go here\r\n//   // ... (copy them from the App component in the Canvas)\r\n\r\n//   const handleAddToCart = (doctor: Doctor) => {\r\n//     if (!cart.find(item => item.id === doctor.id)) {\r\n//       setCart([...cart, doctor]);\r\n//       // Consider using a toast notification library instead of alert for better UX\r\n//       alert(`${doctor.name} added to cart!`);\r\n//     } else {\r\n//       alert(`${doctor.name} is already in the cart.`);\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveFromCart = (doctorId: string) => {\r\n//     setCart(cart.filter((doctor) => doctor.id !== doctorId));\r\n//   };\r\n\r\n//   const handleOpenContactModal = (doctor: Doctor) => {\r\n//     setSelectedDoctor(doctor);\r\n//     setActiveModal('contact');\r\n//   };\r\n\r\n//  const handleContactSubmit = (formData: { name: string; email: string; message: string; doctorName: string }) => {\r\n//     console.log(\"Contact Form Submitted:\", formData);\r\n//     alert(`Message for Dr. ${formData.doctorName} sent successfully by ${formData.name}! \\n(Check console for details)`);\r\n//     setActiveModal(null);\r\n//   };\r\n\r\n//   const handleCheckout = () => {\r\n//     if (cart.length === 0) {\r\n//       alert(\"Your cart is empty.\");\r\n//       return;\r\n//     }\r\n//     setActiveModal('payment');\r\n//   };\r\n\r\n//   const handlePaymentSubmit = (paymentData: { cardName: string; cardNumber: string; expiryDate: string; cvv: string }) => {\r\n//     console.log(\"Payment Data Submitted:\", paymentData);\r\n//     const totalAmount = cart.reduce((sum, doc) => sum + doc.fee, 0);\r\n//     alert(`Payment of $${totalAmount.toFixed(2)} successful for ${paymentData.cardName}! \\n(Check console for details) \\nAppointments booked (simulated).`);\r\n//     setCart([]);\r\n//     setActiveModal(null);\r\n//   };\r\n\r\n//   const cartTotalAmount = useMemo(() => {\r\n//     return cart.reduce((sum, doctor) => sum + doctor.fee, 0);\r\n//   }, [cart]);\r\n\r\n//   return (\r\n//     <div className=\"bg-slate-100 min-h-screen flex flex-col\">\r\n//       <Header cartItemCount={cart.length} onCartClick={() => setActiveModal('cart')} />\r\n      \r\n//       <main className=\"flex-grow\">\r\n//         <div className=\"bg-slate-900 text-white py-12 md:py-16 text-center\">\r\n//             <div className=\"container mx-auto px-4\">\r\n//                 <h1 className=\"text-4xl md:text-5xl font-extrabold mb-3\">Find Your Doctor</h1>\r\n//                 <p className=\"text-lg md:text-xl text-slate-300 max-w-2xl mx-auto\">\r\n//                     Access experienced medical professionals. Book appointments and get the help you need, effortlessly.\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//         <DoctorListAndSearch doctors={doctors} onAddToCart={handleAddToCart} onContact={handleOpenContactModal} />\r\n//       </main>\r\n\r\n//       <CartView\r\n//         cart={cart}\r\n//         onRemoveFromCart={handleRemoveFromCart}\r\n//         onCheckout={handleCheckout}\r\n//         isOpen={activeModal === 'cart'}\r\n//         onClose={() => setActiveModal(null)}\r\n//       />\r\n\r\n//       <ContactDoctorModal\r\n//         isOpen={activeModal === 'contact'}\r\n//         onClose={() => setActiveModal(null)}\r\n//         doctor={selectedDoctor}\r\n//         onSubmit={handleContactSubmit}\r\n//       />\r\n\r\n//       <PaymentModal\r\n//         isOpen={activeModal === 'payment'}\r\n//         onClose={() => setActiveModal(null)}\r\n//         amount={cartTotalAmount}\r\n//         onSubmit={handlePaymentSubmit}\r\n//       />\r\n      \r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DrHelpPage;\r\n// app/page.tsx\r\n\"use client\";\r\nimport React, { useState, useMemo } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs for queries\r\n\r\n// Import Components\r\nimport Header from '../components/layout/Header';\r\nimport Footer from '../components/layout/Footer';\r\nimport DoctorListAndSearch from '../components/doctors/DoctorListAndSearch';\r\nimport CartView from '../components/doctors/CartView';\r\nimport ContactDoctorModal from '../components/doctors/ContactDoctorModal';\r\nimport PaymentModal from '../components/doctors/PaymentModal';\r\nimport QueryStatusAndCommunication from '../components/communication/QueryStatusAndCommunication'; // NEW IMPORT\r\n\r\n// Import Data and Types\r\nimport { initialDoctorsData, Doctor, UserQuery } from '../components/types';\r\n\r\nconst App = () => {\r\n  const [doctors, setDoctors] = useState<Doctor[]>(initialDoctorsData);\r\n  const [cart, setCart] = useState<Doctor[]>([]);\r\n  const [userQueries, setUserQueries] = useState<UserQuery[]>([]); // NEW STATE for tracking queries\r\n  const [activeModal, setActiveModal] = useState<null | 'cart' | 'contact' | 'payment' | 'queries'>(null); // Added 'queries'\r\n  const [selectedDoctor, setSelectedDoctor] = useState<Doctor | null>(null); // For contact modal\r\n\r\n  const handleAddToCart = (doctor: Doctor) => {\r\n    if (!cart.find(item => item.id === doctor.id)) {\r\n      setCart([...cart, doctor]);\r\n      alert(`${doctor.name} added to cart!`);\r\n    } else {\r\n      alert(`${doctor.name} is already in the cart.`);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = (doctorId: string) => {\r\n    setCart(cart.filter((doctor) => doctor.id !== doctorId));\r\n  };\r\n\r\n  const handleOpenContactModal = (doctor: Doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setActiveModal('contact');\r\n  };\r\n\r\n  // Modified to handle saving query data\r\n  const handleContactSubmit = (formData: { name: string; email: string; message: string; doctorName: string; doctorId: string; }) => {\r\n    const newQuery: UserQuery = {\r\n      id: uuidv4(), // Generate a unique ID for the query\r\n      doctorName: formData.doctorName,\r\n      userEmail: formData.email,\r\n      userName: formData.name,\r\n      message: formData.message,\r\n      timestamp: new Date().toISOString(), // Current timestamp\r\n      status: 'Sent', // Initial status\r\n    };\r\n    setUserQueries(prevQueries => [...prevQueries, newQuery]);\r\n\r\n    // --- REAL-TIME MAIL SENDING (Backend Integration Point) ---\r\n    console.log(\"--- SIMULATED: Sending message to backend for email delivery ---\");\r\n    console.log(\"Query Details:\", newQuery);\r\n    console.log(`Backend would now send an email to ${initialDoctorsData.find(d => d.id === formData.doctorId)?.contactEmail || \"doctor's email\"}`);\r\n    // A real application would make an API call here:\r\n    // fetch('/api/send-email', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify(newQuery),\r\n    // })\r\n    // .then(response => response.json())\r\n    // .then(data => {\r\n    //   if (data.success) {\r\n    //     // Update status to 'Delivered' or 'Sent' based on backend response\r\n    //     setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Delivered' } : q));\r\n    //   } else {\r\n    //     setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Error' } : q));\r\n    //   }\r\n    // }).catch(error => {\r\n    //   console.error(\"Failed to send email via backend:\", error);\r\n    //   setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Error' } : q));\r\n    // });\r\n    // --- END OF REAL-TIME MAIL SENDING SIMULATION ---\r\n\r\n\r\n    alert(`Message for Dr. ${formData.doctorName} sent successfully by ${formData.name}! (Simulated)`);\r\n    setActiveModal(null);\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (cart.length === 0) {\r\n      alert(\"Your cart is empty.\");\r\n      return;\r\n    }\r\n    setActiveModal('payment'); // Open payment modal\r\n  };\r\n\r\n  const handlePaymentSubmit = (paymentData: { cardName: string; cardNumber: string; expiryDate: string; cvv: string }) => {\r\n    console.log(\"Payment Data Submitted:\", paymentData);\r\n    const totalAmount = cart.reduce((sum, doc) => sum + doc.fee, 0);\r\n    alert(`Payment of $${totalAmount.toFixed(2)} successful for ${paymentData.cardName}! (Simulated) \\nAppointments booked (simulated).`);\r\n    setCart([]); // Clear cart after successful payment\r\n    setActiveModal(null);\r\n  };\r\n\r\n  const handleSimulateDoctorReply = (queryId: string, replyMessage: string) => {\r\n    setUserQueries(prevQueries =>\r\n      prevQueries.map(query =>\r\n        query.id === queryId\r\n          ? { ...query, status: 'Doctor Replied (Simulated)', doctorReply: replyMessage }\r\n          : query\r\n      )\r\n    );\r\n    alert(\"Doctor's reply simulated!\");\r\n    // In a real app, this would happen via a backend webhook or polling for replies\r\n  };\r\n\r\n  const cartTotalAmount = useMemo(() => {\r\n    return cart.reduce((sum, doctor) => sum + doctor.fee, 0);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <div className=\"bg-slate-100 min-h-screen flex flex-col\">\r\n      <Header cartItemCount={cart.length} onCartClick={() => setActiveModal('cart')} />\r\n      \r\n      <main className=\"flex-grow\">\r\n        <div className=\"bg-slate-900 text-white py-12 md:py-16 text-center\">\r\n            <div className=\"container mx-auto px-4\">\r\n                <h1 className=\"text-4xl md:text-5xl font-extrabold mb-3\">Find Your Doctor</h1>\r\n                <p className=\"text-lg md:text-xl text-slate-300 max-w-2xl mx-auto\">\r\n                    Access experienced medical professionals. Book appointments and get the help you need, effortlessly.\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <DoctorListAndSearch doctors={doctors} onAddToCart={handleAddToCart} onContact={handleOpenContactModal} />\r\n\r\n        {/* Section to view message statuses */}\r\n        <div className=\"py-12 bg-slate-50\">\r\n            <div className=\"container mx-auto px-4 text-center\">\r\n                <h2 className=\"text-3xl font-bold text-slate-800 mb-6\">Your Communication History</h2>\r\n                <button\r\n                    onClick={() => setActiveModal('queries')}\r\n                    className=\"bg-purple-600 text-white py-3 px-6 rounded-lg hover:bg-purple-700 transition-colors font-semibold text-base flex items-center justify-center mx-auto space-x-2\"\r\n                >\r\n                    <Mail size={20} />\r\n                    <span>View Sent Messages</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n      </main>\r\n\r\n      <CartView\r\n        cart={cart}\r\n        onRemoveFromCart={handleRemoveFromCart}\r\n        onCheckout={handleCheckout}\r\n        isOpen={activeModal === 'cart'}\r\n        onClose={() => setActiveModal(null)}\r\n      />\r\n\r\n      <ContactDoctorModal\r\n        isOpen={activeModal === 'contact'}\r\n        onClose={() => setActiveModal(null)}\r\n        doctor={selectedDoctor}\r\n        onSubmit={handleContactSubmit}\r\n      />\r\n\r\n      <PaymentModal\r\n        isOpen={activeModal === 'payment'}\r\n        onClose={() => setActiveModal(null)}\r\n        amount={cartTotalAmount}\r\n        onSubmit={handlePaymentSubmit}\r\n      />\r\n\r\n      {/* New Modal for Query Status and Communication */}\r\n      <Modal\r\n        isOpen={activeModal === 'queries'}\r\n        onClose={() => setActiveModal(null)}\r\n        title=\"Your Message Queries\"\r\n      >\r\n        <QueryStatusAndCommunication\r\n          userQueries={userQueries}\r\n          onSimulateDoctorReply={handleSimulateDoctorReply}\r\n        />\r\n      </Modal>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}