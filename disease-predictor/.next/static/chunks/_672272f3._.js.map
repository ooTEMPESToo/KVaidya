{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/app/reports/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, ChangeEvent, FormEvent } from \"react\"; // Import event types\r\nimport Head from \"next/head\";\r\n\r\nexport default function AnalyzeReportPage() {\r\n  const [file, setFile] = useState<File | null>(null); // Type for file state\r\n  const [question, setQuestion] = useState<string>(\"\");\r\n  const [response, setResponse] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  // Type the event parameter for file input\r\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setFile(event.target.files[0]);\r\n    } else {\r\n      setFile(null); // Handle case where no file is selected or files array is empty\r\n    }\r\n    setResponse(\"\"); // Clear previous response\r\n    setError(\"\"); // Clear previous error\r\n  };\r\n\r\n  // Type the event parameter for textarea\r\n  const handleQuestionChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setQuestion(event.target.value);\r\n  };\r\n\r\n  // Type the event parameter for form submission\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (!file) {\r\n      setError(\"Please select a PDF file.\");\r\n      return;\r\n    }\r\n    if (!question.trim()) {\r\n      setError(\"Please enter your question about the report.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setResponse(\"\");\r\n    setError(\"\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"pdf\", file);\r\n    formData.append(\"question\", question);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/analyze-report\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        setResponse(data.response);\r\n      } else {\r\n        setError(data.error || \"An unknown error occurred.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Frontend fetch error:\", err);\r\n      setError(\r\n        \"Failed to connect to the backend or an unexpected error occurred. Please ensure the backend server is running.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto mt-10 p-6 bg-white rounded-lg shadow-lg\">\r\n      <Head>\r\n        <title>Medical Report Analyzer</title>\r\n      </Head>\r\n\r\n      <h1 className=\"text-2xl font-bold mb-4 text-center\">\r\n        Medical Report Analyzer\r\n      </h1>\r\n\r\n      <p className=\"text-sm text-red-600 border-l-4 border-red-400 pl-4 mb-6\">\r\n        <strong>DISCLAIMER:</strong> This tool ML model to answer questions about\r\n        medical reports. The information provided is <u>NOT</u> a substitute for\r\n        professional medical advice, diagnosis, or treatment. Always seek the\r\n        advice of your physician or other qualified healthcare provider.\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div>\r\n          <label htmlFor=\"pdfFile\" className=\"block text-sm font-medium mb-1\">\r\n            Upload PDF Report:\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"pdfFile\"\r\n            accept=\".pdf\"\r\n            onChange={handleFileChange}\r\n            required\r\n            className=\"w-full border-2 border-dashed border-gray-300 p-3 rounded-md text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"question\" className=\"block text-sm font-medium mb-1\">\r\n            Your Question About the Report:\r\n          </label>\r\n          <textarea\r\n            id=\"question\"\r\n            value={question}\r\n            onChange={handleQuestionChange}\r\n            placeholder=\"e.g., What was the blood pressure reading?\"\r\n            rows={4}\r\n            required\r\n            className=\"w-full p-3 border border-gray-300 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className={`w-full py-2 rounded-md font-semibold text-white transition-colors ${\r\n            isLoading\r\n              ? \"bg-gray-400 cursor-not-allowed\"\r\n              : \"bg-black hover:bg-gray-500\"\r\n          }`}\r\n        >\r\n          {isLoading ? \"Analyzing...\" : \"Analyze Report\"}\r\n        </button>\r\n      </form>\r\n\r\n      {error && (\r\n        <div className=\"mt-6 p-4 border border-red-300 bg-red-50 text-red-700 rounded-md\">\r\n          <strong>Error:</strong> {error}\r\n        </div>\r\n      )}\r\n\r\n      {response && (\r\n        <div className=\"mt-6 p-4 bg-gray-100 rounded-lg\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Analysis Result:</h2>\r\n          <p className=\"text-sm text-gray-800 whitespace-pre-line\">\r\n            {response.replace(/[*`_>-]/g, \"\").trim()}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file://D%3A/html/Main%20projects/Disease-Prediction-main/disease-predictor/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}