{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/types.ts"],"sourcesContent":["// components/types.ts\r\nexport type Doctor = {\r\n  id: string;\r\n  name: string;\r\n  specialty: string;\r\n  degree: string;\r\n  location: string;\r\n  image: string;\r\n  contactEmail: string;\r\n  availability: string;\r\n  fee: number;\r\n};\r\n\r\nexport type UserQuery = {\r\n  id: string;\r\n  doctorName: string;\r\n  userEmail: string;\r\n  userName: string;\r\n  message: string;\r\n  timestamp: string;\r\n  status: 'Sent' | 'Delivered' | 'Read' | 'Doctor Replied (Simulated)' | 'Error'; // Example statuses\r\n  doctorReply?: string; // Optional field for simulated reply\r\n};\r\n\r\n\r\nexport const initialDoctorsData: Doctor[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Dr. Sarah Johnson\",\r\n    specialty: \"Cardiology\",\r\n    degree: \"MD - Cardiology & Interventional Cardiology\",\r\n    location: \"Atlanta, GA\",\r\n    image: \"https://img.freepik.com/free-photo/woman-doctor-wearing-lab-coat-with-stethoscope-isolated_1303-29791.jpg?w=360&h=360&fit=crop&crop=top\",\r\n    contactEmail: \"sarah.j.contact@ourplatform.com\",\r\n    availability: \"Mon, Wed, Fri (9 AM - 5 PM)\",\r\n    fee: 50,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Dr. Michael Chen\",\r\n    specialty: \"Hematology\",\r\n    degree: \"MD - Hematology & Medical Oncology\",\r\n    location: \"Savannah, GA\",\r\n    image: \"https://img.freepik.com/free-photo/doctor-with-his-arms-crossed-white-background_1368-5790.jpg?w=360&h=360&fit=crop&crop=top\",\r\n    contactEmail: \"michael.c.contact@ourplatform.com\",\r\n    availability: \"Tue, Thu (10 AM - 6 PM)\",\r\n    fee: 65,\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Dr. Emily Rodriguez\",\r\n    specialty: \"Pulmonology\",\r\n    degree: \"MD - Pulmonary Disease & Critical Care\",\r\n    location: \"Augusta, GA\",\r\n    image: \"https://img.freepik.com/free-photo/portrait-smiling-female-doctor-standing-with-laptop-computer-medical-office_1301-7807.jpg?w=360&h=360&fit=crop&crop=top\",\r\n    contactEmail: \"emily.r.contact@ourplatform.com\",\r\n    availability: \"Mon - Thu (8 AM - 4 PM)\",\r\n    fee: 55,\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"Dr. James Wilson\",\r\n    specialty: \"Cardiology\",\r\n    degree: \"MD - Cardiovascular Disease & Internal Medicine\",\r\n    location: \"Macon, GA\",\r\n    image: \"https://img.freepik.com/free-photo/medical-workers-covid-19-vaccination-concept-confident-professional-doctor-male-nurse-blue-scrubs-show-thumbs-up-recommend-clinic-service-guarantee-quality-assurance_1258-57360.jpg?w=360&h=360&fit=crop&crop=top\",\r\n    contactEmail: \"james.w.contact@ourplatform.com\",\r\n    availability: \"By Appointment Only\",\r\n    fee: 70,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"Dr. Linda Miller\",\r\n    specialty: \"Pediatrics\",\r\n    degree: \"MD - General Pediatrics\",\r\n    location: \"Columbus, GA\",\r\n    image: \"https://img.freepik.com/free-photo/smiling-young-female-doctor-wearing-medical-robe-with-stethoscope-standing-with-crossed-arms-isolated-pink-wall_141793-10065.jpg?w=360&h=360&fit=crop&crop=top\",\r\n    contactEmail: \"linda.m.contact@ourplatform.com\",\r\n    availability: \"Mon - Fri (9 AM - 3 PM)\",\r\n    fee: 45,\r\n  }\r\n];"],"names":[],"mappings":"AAAA,sBAAsB;;;;AAyBf,MAAM,qBAA+B;IAC1C;QACE,IAAI;QACJ,MAAM;QACN,WAAW;QACX,QAAQ;QACR,UAAU;QACV,OAAO;QACP,cAAc;QACd,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,MAAM;QACN,WAAW;QACX,QAAQ;QACR,UAAU;QACV,OAAO;QACP,cAAc;QACd,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,MAAM;QACN,WAAW;QACX,QAAQ;QACR,UAAU;QACV,OAAO;QACP,cAAc;QACd,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,MAAM;QACN,WAAW;QACX,QAAQ;QACR,UAAU;QACV,OAAO;QACP,cAAc;QACd,cAAc;QACd,KAAK;IACP;IACA;QACE,IAAI;QACJ,MAAM;QACN,WAAW;QACX,QAAQ;QACR,UAAU;QACV,OAAO;QACP,cAAc;QACd,cAAc;QACd,KAAK;IACP;CACD","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/layout/Headder.tsx"],"sourcesContent":["// components/layout/Header.tsx\r\n\"use client\";\r\nimport React from 'react';\r\nimport Link from 'next/link'; // Import Link for navigation\r\nimport { ShoppingCart, Mail } from 'lucide-react';\r\n\r\ninterface HeaderProps {\r\n  cartItemCount: number;\r\n  onCartClick: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ cartItemCount, onCartClick }) => {\r\n  return (\r\n    <header className=\"bg-white shadow-md py-4\">\r\n      <div className=\"container mx-auto px-4 flex justify-between items-center\">\r\n        {/* Logo/Site Title */}\r\n        <Link href=\"/\" className=\"text-2xl font-bold text-sky-700 hover:text-sky-800 transition-colors\">\r\n          DocConnect\r\n        </Link>\r\n\r\n        {/* Navigation/Actions */}\r\n        <nav className=\"flex items-center space-x-6\">\r\n          <Link href=\"/history\" className=\"text-slate-700 hover:text-purple-600 transition-colors flex items-center space-x-1 font-medium\">\r\n            <Mail size={20} />\r\n            <span>History</span>\r\n          </Link>\r\n          <button\r\n            onClick={onCartClick}\r\n            className=\"relative text-slate-700 hover:text-sky-600 transition-colors p-2 rounded-full focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n            aria-label=\"View Cart\"\r\n          >\r\n            <ShoppingCart size={24} />\r\n            {cartItemCount > 0 && (\r\n              <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center\">\r\n                {cartItemCount}\r\n              </span>\r\n            )}\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAG/B,oRAA8B,6BAA6B;AAC3D;AAAA;AAHA;;;;AAUA,MAAM,SAAgC,CAAC,EAAE,aAAa,EAAE,WAAW,EAAE;IACnE,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC,+JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BAAuE;;;;;;8BAKhG,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;;8CAC9B,6LAAC,qMAAA,CAAA,OAAI;oCAAC,MAAM;;;;;;8CACZ,6LAAC;8CAAK;;;;;;;;;;;;sCAER,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,cAAW;;8CAEX,6LAAC,yNAAA,CAAA,eAAY;oCAAC,MAAM;;;;;;gCACnB,gBAAgB,mBACf,6LAAC;oCAAK,WAAU;8CACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB;KA/BM;uCAiCS","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/Dr_card.tsx"],"sourcesContent":["import { Mail, ShoppingCart } from \"lucide-react\";\r\nimport { Doctor } from './types';\r\ninterface DoctorCardProps {\r\n  doctor: Doctor;\r\n  onAddToCart: (doctor: Doctor) => void;\r\n  onContact: (doctor: Doctor) => void;\r\n}\r\nconst DoctorCard: React.FC<DoctorCardProps> = ({ doctor, onAddToCart, onContact }) => {\r\n  return (\r\n    <div className=\"bg-white shadow-xl rounded-lg overflow-hidden flex flex-col transition-all duration-300 hover:shadow-2xl hover:scale-[1.02]\">\r\n      <img\r\n        src={doctor.image || `https://placehold.co/400x300/E2E8F0/4A5568?text=${doctor.name.split(' ')[1]}`}\r\n        alt={`Photo of ${doctor.name}`}\r\n        className=\"w-full h-56 object-cover\"\r\n        onError={(e) => (e.currentTarget.src = `https://placehold.co/400x300/E2E8F0/4A5568?text=Image+Error`)}\r\n      />\r\n      <div className=\"p-5 flex flex-col flex-grow\">\r\n        <h3 className=\"text-xl font-bold text-slate-800\">{doctor.name}</h3>\r\n        <p className=\"text-sky-600 font-medium text-sm\">{doctor.specialty}</p>\r\n        <p className=\"text-xs text-slate-600 mt-1 mb-2 flex-grow\">{doctor.degree}</p>\r\n        <p className=\"text-xs text-slate-500\"><span className=\"font-medium\">Location:</span> {doctor.location}</p>\r\n        <p className=\"text-xs text-slate-500\"><span className=\"font-medium\">Availability:</span> {doctor.availability}</p>\r\n        <p className=\"text-lg font-semibold text-slate-700 mt-2 mb-3\">${doctor.fee}<span className=\"text-xs font-normal\"> / consultation</span></p>\r\n        <div className=\"mt-auto space-y-2\">\r\n          <button\r\n            onClick={() => onAddToCart(doctor)}\r\n            className=\"w-full bg-sky-500 text-white py-2.5 px-4 rounded-md hover:bg-sky-600 transition-colors font-medium text-sm flex items-center justify-center space-x-2\"\r\n          >\r\n            <ShoppingCart size={18} />\r\n            <span>Add to Cart</span>\r\n          </button>\r\n          <button\r\n            onClick={() => onContact(doctor)}\r\n            className=\"w-full bg-slate-200 text-slate-700 py-2.5 px-4 rounded-md hover:bg-slate-300 transition-colors font-medium text-sm flex items-center justify-center space-x-2\"\r\n          >\r\n            <Mail size={18} />\r\n            <span>Contact Doctor</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;"],"names":[],"mappings":";;;;AAAA;AAAA;;;AAOA,MAAM,aAAwC,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE;IAC/E,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,KAAK,OAAO,KAAK,IAAI,CAAC,gDAAgD,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;gBACnG,KAAK,CAAC,SAAS,EAAE,OAAO,IAAI,EAAE;gBAC9B,WAAU;gBACV,SAAS,CAAC,IAAO,EAAE,aAAa,CAAC,GAAG,GAAG,CAAC,2DAA2D,CAAC;;;;;;0BAEtG,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoC,OAAO,IAAI;;;;;;kCAC7D,6LAAC;wBAAE,WAAU;kCAAoC,OAAO,SAAS;;;;;;kCACjE,6LAAC;wBAAE,WAAU;kCAA8C,OAAO,MAAM;;;;;;kCACxE,6LAAC;wBAAE,WAAU;;0CAAyB,6LAAC;gCAAK,WAAU;0CAAc;;;;;;4BAAgB;4BAAE,OAAO,QAAQ;;;;;;;kCACrG,6LAAC;wBAAE,WAAU;;0CAAyB,6LAAC;gCAAK,WAAU;0CAAc;;;;;;4BAAoB;4BAAE,OAAO,YAAY;;;;;;;kCAC7G,6LAAC;wBAAE,WAAU;;4BAAiD;4BAAE,OAAO,GAAG;0CAAC,6LAAC;gCAAK,WAAU;0CAAsB;;;;;;;;;;;;kCACjH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS,IAAM,YAAY;gCAC3B,WAAU;;kDAEV,6LAAC,yNAAA,CAAA,eAAY;wCAAC,MAAM;;;;;;kDACpB,6LAAC;kDAAK;;;;;;;;;;;;0CAER,6LAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAU;;kDAEV,6LAAC,qMAAA,CAAA,OAAI;wCAAC,MAAM;;;;;;kDACZ,6LAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlB;KAnCM;uCAqCS","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/doctors/DoctorListAndSearch.tsx"],"sourcesContent":["import { Search } from \"lucide-react\";\r\nimport DoctorCard from \"../Dr_card\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { Doctor } from '../types';\r\ninterface DoctorListAndSearchProps {\r\n  doctors: Doctor[];\r\n  onAddToCart: (doctor: Doctor) => void;\r\n  onContact: (doctor: Doctor) => void;\r\n}\r\nconst DoctorListAndSearch: React.FC<DoctorListAndSearchProps> = ({ doctors: initialDoctors, onAddToCart, onContact }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortCriteria, setSortCriteria] = useState(\"\"); // e.g., \"name_asc\", \"fee_asc\"\r\n  const [filterSpecialty, setFilterSpecialty] = useState(\"\");\r\n\r\n  const uniqueSpecialties = useMemo(() => {\r\n    const specialties = new Set(initialDoctors.map(doc => doc.specialty));\r\n    return Array.from(specialties).sort();\r\n  }, [initialDoctors]);\r\n\r\n  const filteredAndSortedDoctors = useMemo(() => {\r\n    let processedDoctors = [...initialDoctors];\r\n\r\n    if (filterSpecialty) {\r\n      processedDoctors = processedDoctors.filter(doc => doc.specialty === filterSpecialty);\r\n    }\r\n\r\n    if (searchTerm) {\r\n      processedDoctors = processedDoctors.filter(\r\n        (doctor) =>\r\n          doctor.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          doctor.specialty.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (sortCriteria) {\r\n      const [key, order] = sortCriteria.split('_');\r\n      processedDoctors.sort((a, b) => {\r\n        let valA = a[key as keyof Doctor];\r\n        let valB = b[key as keyof Doctor];\r\n\r\n        if (typeof valA === 'string') valA = valA.toLowerCase();\r\n        if (typeof valB === 'string') valB = valB.toLowerCase();\r\n        \r\n        // For numeric comparison (like fee)\r\n        if (typeof valA === 'number' && typeof valB === 'number') {\r\n            return order === \"asc\" ? valA - valB : valB - valA;\r\n        }\r\n\r\n        // For string comparison\r\n        if (valA < valB) return order === \"asc\" ? -1 : 1;\r\n        if (valA > valB) return order === \"asc\" ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n    return processedDoctors;\r\n  }, [searchTerm, sortCriteria, filterSpecialty, initialDoctors]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-4\">\r\n      <div className=\"mb-8 p-6 bg-white rounded-lg shadow-md\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\r\n          <div className=\"md:col-span-1\">\r\n            <label htmlFor=\"search\" className=\"block text-sm font-medium text-slate-700 mb-1\">Search Doctors</label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"search\"\r\n                placeholder=\"Name or specialty...\"\r\n                className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none pl-10 text-slate-700\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" size={20} />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"filterSpecialty\" className=\"block text-sm font-medium text-slate-700 mb-1\">Filter by Specialty</label>\r\n            <select\r\n              id=\"filterSpecialty\"\r\n              className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none bg-white text-slate-700\"\r\n              value={filterSpecialty}\r\n              onChange={(e) => setFilterSpecialty(e.target.value)}\r\n            >\r\n              <option value=\"\">All Specialties</option>\r\n              {uniqueSpecialties.map(spec => <option key={spec} value={spec}>{spec}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"sort\" className=\"block text-sm font-medium text-slate-700 mb-1\">Sort by</label>\r\n            <select\r\n              id=\"sort\"\r\n              className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none bg-white text-slate-700\"\r\n              value={sortCriteria}\r\n              onChange={(e) => setSortCriteria(e.target.value)}\r\n            >\r\n              <option value=\"\">Default</option>\r\n              <option value=\"name_asc\">Name (A-Z)</option>\r\n              <option value=\"name_desc\">Name (Z-A)</option>\r\n              <option value=\"fee_asc\">Fee (Low to High)</option>\r\n              <option value=\"fee_desc\">Fee (High to Low)</option>\r\n              <option value=\"specialty_asc\">Specialty (A-Z)</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {filteredAndSortedDoctors.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n          {filteredAndSortedDoctors.map((doctor) => (\r\n            <DoctorCard key={doctor.id} doctor={doctor} onAddToCart={onAddToCart} onContact={onContact} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center text-slate-600 text-xl py-10\">No doctors found matching your criteria.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default DoctorListAndSearch;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/Modal.tsx"],"sourcesContent":["import { X } from \"lucide-react\";\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: React.ReactNode;\r\n  title: string;\r\n}\r\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, children, title }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex justify-center items-center z-[100] p-4\">\r\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center p-5 border-b border-gray-200\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800\">{title}</h3>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors p-1 rounded-full hover:bg-gray-100\"\r\n            aria-label=\"Close modal\"\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-5 md:p-6\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;"],"names":[],"mappings":";;;;AAAA;;;AAQA,MAAM,QAA8B,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;IACvE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAuC;;;;;;sCACrD,6LAAC;4BACC,SAAS;4BACT,WAAU;4BACV,cAAW;sCAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;gCAAC,MAAM;;;;;;;;;;;;;;;;;8BAGb,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;KAtBM;uCAuBS","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/CartView.tsx"],"sourcesContent":["import { CreditCard, X } from \"lucide-react\";\r\nimport { useMemo } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { Doctor } from './types';\r\ninterface CartViewProps {\r\n  cart: Doctor[];\r\n  onRemoveFromCart: (doctorId: string) => void;\r\n  onCheckout: () => void;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\nconst CartView: React.FC<CartViewProps> = ({ cart, onRemoveFromCart, onCheckout, isOpen, onClose }) => {\r\n  const totalAmount = useMemo(() => {\r\n    return cart.reduce((sum, doctor) => sum + doctor.fee, 0);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} title=\"Your Consultation Cart\">\r\n      {cart.length === 0 ? (\r\n        <p className=\"text-slate-600 text-center py-8\">Your cart is empty. Add a doctor to get started.</p>\r\n      ) : (\r\n        <>\r\n          <div className=\"space-y-4 max-h-[50vh] overflow-y-auto pr-2\">\r\n            {cart.map((doctor) => (\r\n              <div key={doctor.id} className=\"flex items-center justify-between p-3 bg-slate-50 rounded-lg border border-slate-200\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <img src={doctor.image} alt={doctor.name} className=\"w-14 h-14 rounded-md object-cover\" \r\n                       onError={(e) => (e.currentTarget.src = `https://placehold.co/60x60/E2E8F0/4A5568?text=${doctor.name.charAt(0)}`)}/>\r\n                  <div>\r\n                    <h4 className=\"font-semibold text-slate-700 text-sm\">{doctor.name}</h4>\r\n                    <p className=\"text-xs text-slate-500\">{doctor.specialty}</p>\r\n                    <p className=\"text-sm font-medium text-sky-600\">${doctor.fee}</p>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  onClick={() => onRemoveFromCart(doctor.id)}\r\n                  className=\"text-red-500 hover:text-red-700 p-1 rounded-full hover:bg-red-100 transition-colors\"\r\n                  aria-label={`Remove ${doctor.name} from cart`}\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"mt-6 pt-4 border-t border-slate-200\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <span className=\"text-lg font-semibold text-slate-700\">Total:</span>\r\n              <span className=\"text-xl font-bold text-sky-600\">${totalAmount.toFixed(2)}</span>\r\n            </div>\r\n            <button\r\n              onClick={() => {\r\n                onCheckout();\r\n                onClose(); // Close cart modal after initiating checkout\r\n              }}\r\n              className=\"w-full bg-green-500 text-white py-3 px-6 rounded-lg hover:bg-green-600 transition-colors font-semibold text-base flex items-center justify-center space-x-2\"\r\n            >\r\n              <CreditCard size={20}/>\r\n              <span>Proceed to Payment</span>\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default CartView;"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;;;AASA,MAAM,WAAoC,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;;IAChG,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;yCAAE;YAC1B,OAAO,KAAK,MAAM;iDAAC,CAAC,KAAK,SAAW,MAAM,OAAO,GAAG;gDAAE;QACxD;wCAAG;QAAC;KAAK;IAET,qBACE,6LAAC,uHAAA,CAAA,UAAK;QAAC,QAAQ;QAAQ,SAAS;QAAS,OAAM;kBAC5C,KAAK,MAAM,KAAK,kBACf,6LAAC;YAAE,WAAU;sBAAkC;;;;;iCAE/C;;8BACE,6LAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,uBACT,6LAAC;4BAAoB,WAAU;;8CAC7B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,KAAK,OAAO,KAAK;4CAAE,KAAK,OAAO,IAAI;4CAAE,WAAU;4CAC/C,SAAS,CAAC,IAAO,EAAE,aAAa,CAAC,GAAG,GAAG,CAAC,8CAA8C,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;;;;;;sDACpH,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DAAwC,OAAO,IAAI;;;;;;8DACjE,6LAAC;oDAAE,WAAU;8DAA0B,OAAO,SAAS;;;;;;8DACvD,6LAAC;oDAAE,WAAU;;wDAAmC;wDAAE,OAAO,GAAG;;;;;;;;;;;;;;;;;;;8CAGhE,6LAAC;oCACC,SAAS,IAAM,iBAAiB,OAAO,EAAE;oCACzC,WAAU;oCACV,cAAY,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;8CAE7C,cAAA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,MAAM;;;;;;;;;;;;2BAfH,OAAO,EAAE;;;;;;;;;;8BAoBvB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;8CAAuC;;;;;;8CACvD,6LAAC;oCAAK,WAAU;;wCAAiC;wCAAE,YAAY,OAAO,CAAC;;;;;;;;;;;;;sCAEzE,6LAAC;4BACC,SAAS;gCACP;gCACA,WAAW,6CAA6C;4BAC1D;4BACA,WAAU;;8CAEV,6LAAC,qNAAA,CAAA,aAAU;oCAAC,MAAM;;;;;;8CAClB,6LAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB;GArDM;KAAA;uCAsDS","debugId":null}},
    {"offset": {"line": 961, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/doctors/ContactDoctorModal.tsx"],"sourcesContent":["// components/doctors/ContactDoctorModal.tsx\r\n\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Modal from '../Modal';\r\nimport { Doctor } from '../types';\r\n\r\ninterface ContactDoctorModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  doctor: Doctor | null;\r\n  // Modified onSubmit to return more data for tracking\r\n  onSubmit: (formData: { name: string; email: string; message: string; doctorName: string; doctorId: string; }) => void;\r\n}\r\n\r\nconst ContactDoctorModal: React.FC<ContactDoctorModalProps> = ({ isOpen, onClose, doctor, onSubmit }) => {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setFormData({ name: \"\", email: \"\", message: \"\" });\r\n    }\r\n  }, [isOpen, doctor]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!doctor) return;\r\n    \r\n    if (!formData.name.trim() || !formData.email.trim() || !formData.message.trim()) {\r\n        alert(\"Please fill in all fields.\");\r\n        return;\r\n    }\r\n    if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n        alert(\"Please enter a valid email address.\");\r\n        return;\r\n    }\r\n    \r\n    // Pass doctorId as well for tracking\r\n    onSubmit({ ...formData, doctorName: doctor.name, doctorId: doctor.id });\r\n    onClose();\r\n  };\r\n\r\n  if (!doctor) return null;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} title={`Contact Dr. ${doctor.name}`}>\r\n      <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n        <p className=\"text-sm text-slate-600\">\r\n          Your message will be sent to Dr. {doctor.name} through our secure platform.\r\n          They will respond to your provided email address.\r\n        </p>\r\n        <div>\r\n          <label htmlFor=\"contactName\" className=\"block text-sm font-medium text-slate-700 mb-1\">Your Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"contactName\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"contactEmail\" className=\"block text-sm font-medium text-slate-700 mb-1\">Your Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"contactEmail\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"contactMessage\" className=\"block text-sm font-medium text-slate-700 mb-1\">Message</label>\r\n          <textarea\r\n            name=\"message\"\r\n            id=\"contactMessage\"\r\n            rows={4}\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-sky-500 text-white py-3 px-6 rounded-lg hover:bg-sky-600 transition-colors font-semibold text-base\"\r\n        >\r\n          Send Message\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ContactDoctorModal;"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAE5C;AACA;;;AAFA;;;AAaA,MAAM,qBAAwD,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;;IAClG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAI,OAAO;QAAI,SAAS;IAAG;IAE5E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,IAAI,QAAQ;gBACV,YAAY;oBAAE,MAAM;oBAAI,OAAO;oBAAI,SAAS;gBAAG;YACjD;QACF;uCAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,eAAe,CAAC;QACpB,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC7D;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,QAAQ;QAEb,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,OAAO,CAAC,IAAI,IAAI;YAC7E,MAAM;YACN;QACJ;QACA,IAAI,CAAC,eAAe,IAAI,CAAC,SAAS,KAAK,GAAG;YACtC,MAAM;YACN;QACJ;QAEA,qCAAqC;QACrC,SAAS;YAAE,GAAG,QAAQ;YAAE,YAAY,OAAO,IAAI;YAAE,UAAU,OAAO,EAAE;QAAC;QACrE;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC,uHAAA,CAAA,UAAK;QAAC,QAAQ;QAAQ,SAAS;QAAS,OAAO,CAAC,YAAY,EAAE,OAAO,IAAI,EAAE;kBAC1E,cAAA,6LAAC;YAAK,UAAU;YAAc,WAAU;;8BACtC,6LAAC;oBAAE,WAAU;;wBAAyB;wBACF,OAAO,IAAI;wBAAC;;;;;;;8BAGhD,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAc,WAAU;sCAAgD;;;;;;sCACvF,6LAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO,SAAS,IAAI;4BACpB,UAAU;4BACV,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAGZ,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAe,WAAU;sCAAgD;;;;;;sCACxF,6LAAC;4BACC,MAAK;4BACL,MAAK;4BACL,IAAG;4BACH,OAAO,SAAS,KAAK;4BACrB,UAAU;4BACV,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAGZ,6LAAC;;sCACC,6LAAC;4BAAM,SAAQ;4BAAiB,WAAU;sCAAgD;;;;;;sCAC1F,6LAAC;4BACC,MAAK;4BACL,IAAG;4BACH,MAAM;4BACN,OAAO,SAAS,OAAO;4BACvB,UAAU;4BACV,WAAU;4BACV,QAAQ;;;;;;;;;;;;8BAGZ,6LAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GArFM;KAAA;uCAuFS","debugId":null}},
    {"offset": {"line": 1165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/PaymentModal.tsx"],"sourcesContent":["/* eslint-disable prefer-const */\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\ninterface PaymentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  amount: number;\r\n  onSubmit: (paymentData: { cardName: string; cardNumber: string; expiryDate: string; cvv: string }) => void;\r\n}\r\n\r\nconst PaymentModal: React.FC<PaymentModalProps> = ({ isOpen, onClose, amount, onSubmit }) => {\r\n  const [paymentData, setPaymentData] = useState({ cardName: \"\", cardNumber: \"\", expiryDate: \"\", cvv: \"\" });\r\n\r\n   useEffect(() => {\r\n    if (isOpen) {\r\n      setPaymentData({ cardName: \"\", cardNumber: \"\", expiryDate: \"\", cvv: \"\" });\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let { name, value } = e.target;\r\n    // Basic formatting for card number and expiry\r\n    if (name === \"cardNumber\") {\r\n      value = value.replace(/\\D/g, \"\").replace(/(.{4})/g, '$1 ').trim().slice(0, 19);\r\n    } else if (name === \"expiryDate\") {\r\n      value = value.replace(/\\D/g, \"\").replace(/(.{2})/, '$1/').trim().slice(0, 5);\r\n    } else if (name === \"cvv\") {\r\n      value = value.replace(/\\D/g, \"\").slice(0, 4);\r\n    }\r\n    setPaymentData({ ...paymentData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Basic validation\r\n    if (!paymentData.cardName.trim() || !paymentData.cardNumber.trim() || !paymentData.expiryDate.trim() || !paymentData.cvv.trim()) {\r\n        alert(\"Please fill in all payment details.\");\r\n        return;\r\n    }\r\n    if (paymentData.cardNumber.replace(/\\s/g, '').length < 13 || paymentData.cardNumber.replace(/\\s/g, '').length > 16) {\r\n        alert(\"Please enter a valid card number.\");\r\n        return;\r\n    }\r\n    if (!/^(0[1-9]|1[0-2])\\/?([0-9]{2})$/.test(paymentData.expiryDate)) {\r\n        alert(\"Please enter a valid expiry date (MM/YY).\");\r\n        return;\r\n    }\r\n     if (paymentData.cvv.length < 3 || paymentData.cvv.length > 4) {\r\n        alert(\"Please enter a valid CVV.\");\r\n        return;\r\n    }\r\n    onSubmit(paymentData);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} title=\"Secure Payment\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n        <div className=\"bg-sky-50 p-4 rounded-lg border border-sky-200\">\r\n            <p className=\"text-center text-slate-700\">\r\n                You are paying: <span className=\"font-bold text-sky-600 text-xl\">${amount.toFixed(2)}</span>\r\n            </p>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"cardName\" className=\"block text-sm font-medium text-slate-700 mb-1\">Name on Card</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"cardName\"\r\n            id=\"cardName\"\r\n            value={paymentData.cardName}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"cardNumber\" className=\"block text-sm font-medium text-slate-700 mb-1\">Card Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"cardNumber\"\r\n            id=\"cardNumber\"\r\n            placeholder=\"0000 0000 0000 0000\"\r\n            value={paymentData.cardNumber}\r\n            onChange={handleChange}\r\n            className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label htmlFor=\"expiryDate\" className=\"block text-sm font-medium text-slate-700 mb-1\">Expiry Date</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"expiryDate\"\r\n              id=\"expiryDate\"\r\n              placeholder=\"MM/YY\"\r\n              value={paymentData.expiryDate}\r\n              onChange={handleChange}\r\n              className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"cvv\" className=\"block text-sm font-medium text-slate-700 mb-1\">CVV</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"cvv\"\r\n              id=\"cvv\"\r\n              placeholder=\"123\"\r\n              value={paymentData.cvv}\r\n              onChange={handleChange}\r\n              className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-sky-500 focus:border-sky-500 outline-none text-slate-700\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-green-500 text-white py-3 px-6 rounded-lg hover:bg-green-600 transition-colors font-semibold text-base\"\r\n        >\r\n          Pay ${amount.toFixed(2)}\r\n        </button>\r\n         <p className=\"text-xs text-slate-500 text-center mt-2\">\r\n            Your payment is processed securely. This is a demo form.\r\n        </p>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default PaymentModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1448, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1454, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/QueryStatusAndCommunication.tsx"],"sourcesContent":["// components/communication/QueryStatusAndCommunication.tsx\r\n\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Mail, ChevronDown, ChevronUp, Clock, CheckCircle, XCircle, MessageSquare } from 'lucide-react';\r\nimport Modal from './Modal';\r\nimport { UserQuery } from './types'; // Import UserQuery type\r\n\r\ninterface QueryStatusAndCommunicationProps {\r\n  userQueries: UserQuery[];\r\n  onSimulateDoctorReply: (queryId: string, replyMessage: string) => void;\r\n}\r\n\r\nconst QueryStatusAndCommunication: React.FC<QueryStatusAndCommunicationProps> = ({\r\n  userQueries,\r\n  onSimulateDoctorReply,\r\n}) => {\r\n  const [expandedQueryId, setExpandedQueryId] = useState<string | null>(null);\r\n  const [replyText, setReplyText] = useState(\"\");\r\n  const [isReplyModalOpen, setIsReplyModalOpen] = useState(false);\r\n  const [selectedQueryForReply, setSelectedQueryForReply] = useState<UserQuery | null>(null);\r\n\r\n  const toggleExpand = (queryId: string) => {\r\n    setExpandedQueryId(expandedQueryId === queryId ? null : queryId);\r\n  };\r\n\r\n  const openReplyModal = (query: UserQuery) => {\r\n    setSelectedQueryForReply(query);\r\n    setReplyText(`Thank you for your message, ${query.userName}! Regarding your query...`); // Pre-fill\r\n    setIsReplyModalOpen(true);\r\n  };\r\n\r\n  const handleReplySubmit = () => {\r\n    if (selectedQueryForReply && replyText.trim()) {\r\n      onSimulateDoctorReply(selectedQueryForReply.id, replyText.trim());\r\n      setIsReplyModalOpen(false);\r\n      setSelectedQueryForReply(null);\r\n      setReplyText(\"\");\r\n    } else {\r\n      alert(\"Please enter a reply message.\");\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: UserQuery['status']) => {\r\n    switch (status) {\r\n      case 'Sent': return <Clock size={18} className=\"text-blue-500\" />;\r\n      case 'Delivered': return <CheckCircle size={18} className=\"text-green-500\" />;\r\n      case 'Read': return <MessageSquare size={18} className=\"text-purple-500\" />;\r\n      case 'Doctor Replied (Simulated)': return <Mail size={18} className=\"text-indigo-600\" />;\r\n      case 'Error': return <XCircle size={18} className=\"text-red-500\" />;\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8 px-4\">\r\n      <h2 className=\"text-3xl font-bold text-slate-800 mb-6 text-center\">Your Sent Messages Status</h2>\r\n\r\n      {userQueries.length === 0 ? (\r\n        <p className=\"text-center text-slate-600 text-lg py-10 border border-slate-200 rounded-lg bg-white shadow-sm\">\r\n          You haven&apos;t sent any messages yet.\r\n        </p>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {userQueries.map((query) => (\r\n            <div key={query.id} className=\"bg-white p-5 rounded-lg shadow-md border border-slate-200\">\r\n              <div className=\"flex justify-between items-center cursor-pointer\" onClick={() => toggleExpand(query.id)}>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  {getStatusIcon(query.status)}\r\n                  <div>\r\n                    <p className=\"font-semibold text-lg text-slate-800\">To: Dr. {query.doctorName}</p>\r\n                    <p className=\"text-sm text-slate-600\">Status: <span className=\"font-medium\">{query.status}</span></p>\r\n                  </div>\r\n                </div>\r\n                {expandedQueryId === query.id ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\r\n              </div>\r\n\r\n              {expandedQueryId === query.id && (\r\n                <div className=\"mt-4 pt-4 border-t border-slate-200 text-sm\">\r\n                  <p className=\"text-slate-700 mb-2\"><span className=\"font-semibold\">From:</span> {query.userName} ({query.userEmail})</p>\r\n                  <p className=\"text-slate-700 mb-2\"><span className=\"font-semibold\">Sent On:</span> {new Date(query.timestamp).toLocaleString()}</p>\r\n                  <p className=\"text-slate-700 mb-4 border-l-4 border-sky-400 pl-3 py-1 bg-sky-50 rounded-r-md\">\r\n                    <span className=\"font-semibold block text-sky-800\">Your Message:</span>\r\n                    {query.message}\r\n                  </p>\r\n\r\n                  {query.doctorReply && (\r\n                    <div className=\"bg-indigo-50 p-3 rounded-lg border border-indigo-200 mt-3\">\r\n                      <p className=\"font-semibold text-indigo-700 flex items-center mb-1\">\r\n                        <MessageSquare size={16} className=\"mr-2\"/> Doctor&apos;s Reply:\r\n                      </p>\r\n                      <p className=\"text-indigo-800\">{query.doctorReply}</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Simulate Doctor Reply - For demo purposes */}\r\n                  {!query.doctorReply && query.status !== 'Error' && (\r\n                    <button\r\n                      onClick={() => openReplyModal(query)}\r\n                      className=\"mt-4 bg-indigo-500 text-white py-2 px-4 rounded-md hover:bg-indigo-600 transition-colors text-sm flex items-center space-x-2\"\r\n                    >\r\n                      <Mail size={16} />\r\n                      <span>Simulate Doctor&apos;s Reply</span>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Reply Simulation Modal */}\r\n      <Modal isOpen={isReplyModalOpen} onClose={() => setIsReplyModalOpen(false)} title=\"Simulate Doctor's Reply\">\r\n        {selectedQueryForReply && (\r\n          <div className=\"space-y-4\">\r\n            <p className=\"text-slate-700\">Replying to your message to <span className=\"font-semibold\">Dr. {selectedQueryForReply.doctorName}</span>:</p>\r\n            <p className=\"text-sm text-slate-600 italic border-l-2 border-slate-300 pl-2\">`{selectedQueryForReply.message}`</p>\r\n            <div>\r\n              <label htmlFor=\"doctorReply\" className=\"block text-sm font-medium text-slate-700 mb-1\">Doctor&apos;s Reply Message</label>\r\n              <textarea\r\n                id=\"doctorReply\"\r\n                rows={5}\r\n                className=\"w-full p-3 border border-slate-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none text-slate-700\"\r\n                value={replyText}\r\n                onChange={(e) => setReplyText(e.target.value)}\r\n                placeholder=\"Enter doctor's reply here...\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={handleReplySubmit}\r\n              className=\"w-full bg-indigo-600 text-white py-3 px-6 rounded-lg hover:bg-indigo-700 transition-colors font-semibold text-base\"\r\n            >\r\n              Send Simulated Reply\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryStatusAndCommunication;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/components/layout/Footer.tsx"],"sourcesContent":["type FooterProps = object\r\nconst Footer: React.FC<FooterProps> = () => {\r\n  return (\r\n    <footer className=\"bg-slate-900 text-slate-300 py-10 mt-16\">\r\n      <div className=\"container mx-auto px-4 text-center\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-8 text-left\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-white mb-3\">ProHealth</h3>\r\n            <p className=\"text-sm\">Connecting you with trusted medical professionals. Your health is our priority.</p>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-white mb-3\">Quick Links</h3>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li><a href=\"#\" className=\"hover:text-sky-400 transition-colors\">Find a Doctor</a></li>\r\n              <li><a href=\"#\" className=\"hover:text-sky-400 transition-colors\">Services</a></li>\r\n              <li><a href=\"#\" className=\"hover:text-sky-400 transition-colors\">About Us</a></li>\r\n              <li><a href=\"#\" className=\"hover:text-sky-400 transition-colors\">Contact</a></li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-white mb-3\">Contact Us</h3>\r\n            <p className=\"text-sm\">123 Health St, Wellness City, GA</p>\r\n            <p className=\"text-sm\">Email: support@prohealth.com</p>\r\n            <p className=\"text-sm\">Phone: (555) 123-4567</p>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-sm text-slate-400\">&copy; {new Date().getFullYear()} ProHealth. All Rights Reserved.</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;"],"names":[],"mappings":";;;;;AACA,MAAM,SAAgC;IACpC,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAE,WAAU;8CAAU;;;;;;;;;;;;sCAEzB,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC;sDAAG,cAAA,6LAAC;gDAAE,MAAK;gDAAI,WAAU;0DAAuC;;;;;;;;;;;sDACjE,6LAAC;sDAAG,cAAA,6LAAC;gDAAE,MAAK;gDAAI,WAAU;0DAAuC;;;;;;;;;;;sDACjE,6LAAC;sDAAG,cAAA,6LAAC;gDAAE,MAAK;gDAAI,WAAU;0DAAuC;;;;;;;;;;;sDACjE,6LAAC;sDAAG,cAAA,6LAAC;gDAAE,MAAK;gDAAI,WAAU;0DAAuC;;;;;;;;;;;;;;;;;;;;;;;sCAGrE,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAE,WAAU;8CAAU;;;;;;8CACvB,6LAAC;oCAAE,WAAU;8CAAU;;;;;;8CACvB,6LAAC;oCAAE,WAAU;8CAAU;;;;;;;;;;;;;;;;;;8BAG3B,6LAAC;oBAAE,WAAU;;wBAAyB;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;;;;;;;;;;;;AAI/E;KA7BM;uCA+BS","debugId":null}},
    {"offset": {"line": 2091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2097, "column": 0}, "map": {"version":3,"sources":["file://D%3A/majorproject/Disease-Prediction-main/Disease-Prediction-main/disease-predictor/app/Dr_help/page.tsx"],"sourcesContent":["// \"use client\";\r\n// import CartView from \"@/components/CartView\";\r\n// import ContactDoctorModal from \"@/components/ContactDoctorModal\";\r\n// import DoctorListAndSearch from \"@/components/DoctorListAndSearch\";\r\n// import Footer from \"@/components/Footer\";\r\n// import Header from \"@/components/Headder\";\r\n// import PaymentModal from \"@/components/PaymentModal\";\r\n// import { useState, useMemo } from \"react\"; // Added useMemo for optimization\r\n\r\n// const initialDoctorsData = [\r\n//   {\r\n//     id: \"1\",\r\n//     name: \"Dr. Sarah Johnson\",\r\n//     specialty: \"Cardiology\",\r\n//     degree: \"MD - Cardiology & Interventional Cardiology\",\r\n//     location: \"Atlanta, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/woman-doctor-wearing-lab-coat-with-stethoscope-isolated_1303-29791.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"sarah.j.contact@ourplatform.com\", // Internal contact through platform\r\n//     availability: \"Mon, Wed, Fri (9 AM - 5 PM)\",\r\n//     fee: 50, // Consultation fee\r\n//   },\r\n//   {\r\n//     id: \"2\",\r\n//     name: \"Dr. Michael Chen\",\r\n//     specialty: \"Hematology\",\r\n//     degree: \"MD - Hematology & Medical Oncology\",\r\n//     location: \"Savannah, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/doctor-with-his-arms-crossed-white-background_1368-5790.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"michael.c.contact@ourplatform.com\",\r\n//     availability: \"Tue, Thu (10 AM - 6 PM)\",\r\n//     fee: 65,\r\n//   },\r\n//   {\r\n//     id: \"3\",\r\n//     name: \"Dr. Emily Rodriguez\",\r\n//     specialty: \"Pulmonology\",\r\n//     degree: \"MD - Pulmonary Disease & Critical Care\",\r\n//     location: \"Augusta, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/portrait-smiling-female-doctor-standing-with-laptop-computer-medical-office_1301-7807.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"emily.r.contact@ourplatform.com\",\r\n//     availability: \"Mon - Thu (8 AM - 4 PM)\",\r\n//     fee: 55,\r\n//   },\r\n//   {\r\n//     id: \"4\",\r\n//     name: \"Dr. James Wilson\",\r\n//     specialty: \"Cardiology\", // Same specialty for testing sort\r\n//     degree: \"MD - Cardiovascular Disease & Internal Medicine\",\r\n//     location: \"Macon, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/medical-workers-covid-19-vaccination-concept-confident-professional-doctor-male-nurse-blue-scrubs-show-thumbs-up-recommend-clinic-service-guarantee-quality-assurance_1258-57360.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"james.w.contact@ourplatform.com\",\r\n//     availability: \"By Appointment Only\",\r\n//     fee: 70,\r\n//   },\r\n//   {\r\n//     id: \"5\",\r\n//     name: \"Dr. Linda Miller\",\r\n//     specialty: \"Pediatrics\",\r\n//     degree: \"MD - General Pediatrics\",\r\n//     location: \"Columbus, GA\",\r\n//     image: \"https://img.freepik.com/free-photo/smiling-young-female-doctor-wearing-medical-robe-with-stethoscope-standing-with-crossed-arms-isolated-pink-wall_141793-10065.jpg?w=360&h=360&fit=crop&crop=top\",\r\n//     contactEmail: \"linda.m.contact@ourplatform.com\",\r\n//     availability: \"Mon - Fri (9 AM - 3 PM)\",\r\n//     fee: 45,\r\n//   }\r\n// ];\r\n\r\n// // Types\r\n// type Doctor = typeof initialDoctorsData[0];\r\n\r\n// const DrHelpPage = () => { // Or whatever you name your page component\r\n//   const [doctors, setDoctors] = useState<Doctor[]>(initialDoctorsData);\r\n//   const [cart, setCart] = useState<Doctor[]>([]);\r\n//   const [activeModal, setActiveModal] = useState<null | 'cart' | 'contact' | 'payment'>(null);\r\n//   const [selectedDoctor, setSelectedDoctor] = useState<Doctor | null>(null);\r\n\r\n//   // All your handler functions (handleAddToCart, handleRemoveFromCart, etc.) go here\r\n//   // ... (copy them from the App component in the Canvas)\r\n\r\n//   const handleAddToCart = (doctor: Doctor) => {\r\n//     if (!cart.find(item => item.id === doctor.id)) {\r\n//       setCart([...cart, doctor]);\r\n//       // Consider using a toast notification library instead of alert for better UX\r\n//       alert(`${doctor.name} added to cart!`);\r\n//     } else {\r\n//       alert(`${doctor.name} is already in the cart.`);\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveFromCart = (doctorId: string) => {\r\n//     setCart(cart.filter((doctor) => doctor.id !== doctorId));\r\n//   };\r\n\r\n//   const handleOpenContactModal = (doctor: Doctor) => {\r\n//     setSelectedDoctor(doctor);\r\n//     setActiveModal('contact');\r\n//   };\r\n\r\n//  const handleContactSubmit = (formData: { name: string; email: string; message: string; doctorName: string }) => {\r\n//     console.log(\"Contact Form Submitted:\", formData);\r\n//     alert(`Message for Dr. ${formData.doctorName} sent successfully by ${formData.name}! \\n(Check console for details)`);\r\n//     setActiveModal(null);\r\n//   };\r\n\r\n//   const handleCheckout = () => {\r\n//     if (cart.length === 0) {\r\n//       alert(\"Your cart is empty.\");\r\n//       return;\r\n//     }\r\n//     setActiveModal('payment');\r\n//   };\r\n\r\n//   const handlePaymentSubmit = (paymentData: { cardName: string; cardNumber: string; expiryDate: string; cvv: string }) => {\r\n//     console.log(\"Payment Data Submitted:\", paymentData);\r\n//     const totalAmount = cart.reduce((sum, doc) => sum + doc.fee, 0);\r\n//     alert(`Payment of $${totalAmount.toFixed(2)} successful for ${paymentData.cardName}! \\n(Check console for details) \\nAppointments booked (simulated).`);\r\n//     setCart([]);\r\n//     setActiveModal(null);\r\n//   };\r\n\r\n//   const cartTotalAmount = useMemo(() => {\r\n//     return cart.reduce((sum, doctor) => sum + doctor.fee, 0);\r\n//   }, [cart]);\r\n\r\n//   return (\r\n//     <div className=\"bg-slate-100 min-h-screen flex flex-col\">\r\n//       <Header cartItemCount={cart.length} onCartClick={() => setActiveModal('cart')} />\r\n      \r\n//       <main className=\"flex-grow\">\r\n//         <div className=\"bg-slate-900 text-white py-12 md:py-16 text-center\">\r\n//             <div className=\"container mx-auto px-4\">\r\n//                 <h1 className=\"text-4xl md:text-5xl font-extrabold mb-3\">Find Your Doctor</h1>\r\n//                 <p className=\"text-lg md:text-xl text-slate-300 max-w-2xl mx-auto\">\r\n//                     Access experienced medical professionals. Book appointments and get the help you need, effortlessly.\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//         <DoctorListAndSearch doctors={doctors} onAddToCart={handleAddToCart} onContact={handleOpenContactModal} />\r\n//       </main>\r\n\r\n//       <CartView\r\n//         cart={cart}\r\n//         onRemoveFromCart={handleRemoveFromCart}\r\n//         onCheckout={handleCheckout}\r\n//         isOpen={activeModal === 'cart'}\r\n//         onClose={() => setActiveModal(null)}\r\n//       />\r\n\r\n//       <ContactDoctorModal\r\n//         isOpen={activeModal === 'contact'}\r\n//         onClose={() => setActiveModal(null)}\r\n//         doctor={selectedDoctor}\r\n//         onSubmit={handleContactSubmit}\r\n//       />\r\n\r\n//       <PaymentModal\r\n//         isOpen={activeModal === 'payment'}\r\n//         onClose={() => setActiveModal(null)}\r\n//         amount={cartTotalAmount}\r\n//         onSubmit={handlePaymentSubmit}\r\n//       />\r\n      \r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DrHelpPage;\r\n// app/page.tsx\r\n\"use client\";\r\nimport React, { useState, useMemo } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs for queries\r\n\r\n// Import Components\r\n\r\n\r\n// Import Data and Types\r\nimport { initialDoctorsData, Doctor, UserQuery } from '../../components/types';\r\nimport Header from \"@/components/layout/Headder\";\r\nimport DoctorListAndSearch from \"@/components/doctors/DoctorListAndSearch\";\r\nimport { Mail } from \"lucide-react\";\r\nimport CartView from \"@/components/CartView\";\r\nimport ContactDoctorModal from \"@/components/doctors/ContactDoctorModal\";\r\nimport PaymentModal from \"@/components/PaymentModal\";\r\nimport Modal from \"@/components/Modal\";\r\nimport QueryStatusAndCommunication from \"@/components/QueryStatusAndCommunication\";\r\nimport Footer from \"@/components/layout/Footer\";\r\n\r\nconst DrHelpPage = () => {\r\n  const [doctors, setDoctors] = useState<Doctor[]>(initialDoctorsData);\r\n  const [cart, setCart] = useState<Doctor[]>([]);\r\n  const [userQueries, setUserQueries] = useState<UserQuery[]>([]); // NEW STATE for tracking queries\r\n  const [activeModal, setActiveModal] = useState<null | 'cart' | 'contact' | 'payment' | 'queries'>(null); // Added 'queries'\r\n  const [selectedDoctor, setSelectedDoctor] = useState<Doctor | null>(null); // For contact modal\r\n\r\n  const handleAddToCart = (doctor: Doctor) => {\r\n    if (!cart.find(item => item.id === doctor.id)) {\r\n      setCart([...cart, doctor]);\r\n      alert(`${doctor.name} added to cart!`);\r\n    } else {\r\n      alert(`${doctor.name} is already in the cart.`);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = (doctorId: string) => {\r\n    setCart(cart.filter((doctor) => doctor.id !== doctorId));\r\n  };\r\n\r\n  const handleOpenContactModal = (doctor: Doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setActiveModal('contact');\r\n  };\r\n\r\n  // Modified to handle saving query data\r\n  const handleContactSubmit = (formData: { name: string; email: string; message: string; doctorName: string; doctorId: string; }) => {\r\n    const newQuery: UserQuery = {\r\n      id: uuidv4(), // Generate a unique ID for the query\r\n      doctorName: formData.doctorName,\r\n      userEmail: formData.email,\r\n      userName: formData.name,\r\n      message: formData.message,\r\n      timestamp: new Date().toISOString(), // Current timestamp\r\n      status: 'Sent', // Initial status\r\n    };\r\n    setUserQueries(prevQueries => [...prevQueries, newQuery]);\r\n\r\n    // --- REAL-TIME MAIL SENDING (Backend Integration Point) ---\r\n    console.log(\"--- SIMULATED: Sending message to backend for email delivery ---\");\r\n    console.log(\"Query Details:\", newQuery);\r\n    console.log(`Backend would now send an email to ${initialDoctorsData.find(d => d.id === formData.doctorId)?.contactEmail || \"doctor's email\"}`);\r\n    // A real application would make an API call here:\r\n    // fetch('/api/send-email', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify(newQuery),\r\n    // })\r\n    // .then(response => response.json())\r\n    // .then(data => {\r\n    //   if (data.success) {\r\n    //     // Update status to 'Delivered' or 'Sent' based on backend response\r\n    //     setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Delivered' } : q));\r\n    //   } else {\r\n    //     setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Error' } : q));\r\n    //   }\r\n    // }).catch(error => {\r\n    //   console.error(\"Failed to send email via backend:\", error);\r\n    //   setUserQueries(prev => prev.map(q => q.id === newQuery.id ? { ...q, status: 'Error' } : q));\r\n    // });\r\n    // --- END OF REAL-TIME MAIL SENDING SIMULATION ---\r\n\r\n\r\n    alert(`Message for Dr. ${formData.doctorName} sent successfully by ${formData.name}! (Simulated)`);\r\n    setActiveModal(null);\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (cart.length === 0) {\r\n      alert(\"Your cart is empty.\");\r\n      return;\r\n    }\r\n    setActiveModal('payment'); // Open payment modal\r\n  };\r\n\r\n  const handlePaymentSubmit = (paymentData: { cardName: string; cardNumber: string; expiryDate: string; cvv: string }) => {\r\n    console.log(\"Payment Data Submitted:\", paymentData);\r\n    const totalAmount = cart.reduce((sum, doc) => sum + doc.fee, 0);\r\n    alert(`Payment of $${totalAmount.toFixed(2)} successful for ${paymentData.cardName}! (Simulated) \\nAppointments booked (simulated).`);\r\n    setCart([]); // Clear cart after successful payment\r\n    setActiveModal(null);\r\n  };\r\n\r\n  const handleSimulateDoctorReply = (queryId: string, replyMessage: string) => {\r\n    setUserQueries(prevQueries =>\r\n      prevQueries.map(query =>\r\n        query.id === queryId\r\n          ? { ...query, status: 'Doctor Replied (Simulated)', doctorReply: replyMessage }\r\n          : query\r\n      )\r\n    );\r\n    alert(\"Doctor's reply simulated!\");\r\n    // In a real app, this would happen via a backend webhook or polling for replies\r\n  };\r\n\r\n  const cartTotalAmount = useMemo(() => {\r\n    return cart.reduce((sum, doctor) => sum + doctor.fee, 0);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <div className=\"bg-slate-100 min-h-screen flex flex-col\">\r\n      <Header cartItemCount={cart.length} onCartClick={() => setActiveModal('cart')} />\r\n      \r\n      <main className=\"flex-grow\">\r\n        <div className=\"bg-slate-900 text-white py-12 md:py-16 text-center\">\r\n            <div className=\"container mx-auto px-4\">\r\n                <h1 className=\"text-4xl md:text-5xl font-extrabold mb-3\">Find Your Doctor</h1>\r\n                <p className=\"text-lg md:text-xl text-slate-300 max-w-2xl mx-auto\">\r\n                    Access experienced medical professionals. Book appointments and get the help you need, effortlessly.\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <DoctorListAndSearch doctors={doctors} onAddToCart={handleAddToCart} onContact={handleOpenContactModal} />\r\n\r\n        {/* Section to view message statuses */}\r\n        <div className=\"py-12 bg-slate-50\">\r\n            <div className=\"container mx-auto px-4 text-center\">\r\n                <h2 className=\"text-3xl font-bold text-slate-800 mb-6\">Your Communication History</h2>\r\n                <button\r\n                    onClick={() => setActiveModal('queries')}\r\n                    className=\"bg-purple-600 text-white py-3 px-6 rounded-lg hover:bg-purple-700 transition-colors font-semibold text-base flex items-center justify-center mx-auto space-x-2\"\r\n                >\r\n                    <Mail size={20} />\r\n                    <span>View Sent Messages</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n      </main>\r\n\r\n      <CartView\r\n        cart={cart}\r\n        onRemoveFromCart={handleRemoveFromCart}\r\n        onCheckout={handleCheckout}\r\n        isOpen={activeModal === 'cart'}\r\n        onClose={() => setActiveModal(null)}\r\n      />\r\n\r\n      <ContactDoctorModal\r\n        isOpen={activeModal === 'contact'}\r\n        onClose={() => setActiveModal(null)}\r\n        doctor={selectedDoctor}\r\n        onSubmit={handleContactSubmit}\r\n      />\r\n\r\n      <PaymentModal\r\n        isOpen={activeModal === 'payment'}\r\n        onClose={() => setActiveModal(null)}\r\n        amount={cartTotalAmount}\r\n        onSubmit={handlePaymentSubmit}\r\n      />\r\n\r\n      {/* New Modal for Query Status and Communication */}\r\n      <Modal\r\n        isOpen={activeModal === 'queries'}\r\n        onClose={() => setActiveModal(null)}\r\n        title=\"Your Message Queries\"\r\n      >\r\n        <QueryStatusAndCommunication\r\n          userQueries={userQueries}\r\n          onSimulateDoctorReply={handleSimulateDoctorReply}\r\n        />\r\n      </Modal>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrHelpPage;"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,gDAAgD;AAChD,oEAAoE;AACpE,sEAAsE;AACtE,4CAA4C;AAC5C,6CAA6C;AAC7C,wDAAwD;AACxD,+EAA+E;AAE/E,+BAA+B;AAC/B,MAAM;AACN,eAAe;AACf,iCAAiC;AACjC,+BAA+B;AAC/B,6DAA6D;AAC7D,+BAA+B;AAC/B,wJAAwJ;AACxJ,4FAA4F;AAC5F,mDAAmD;AACnD,mCAAmC;AACnC,OAAO;AACP,MAAM;AACN,eAAe;AACf,gCAAgC;AAChC,+BAA+B;AAC/B,oDAAoD;AACpD,gCAAgC;AAChC,6IAA6I;AAC7I,yDAAyD;AACzD,+CAA+C;AAC/C,eAAe;AACf,OAAO;AACP,MAAM;AACN,eAAe;AACf,mCAAmC;AACnC,gCAAgC;AAChC,wDAAwD;AACxD,+BAA+B;AAC/B,2KAA2K;AAC3K,uDAAuD;AACvD,+CAA+C;AAC/C,eAAe;AACf,OAAO;AACP,MAAM;AACN,eAAe;AACf,gCAAgC;AAChC,kEAAkE;AAClE,iEAAiE;AACjE,6BAA6B;AAC7B,sQAAsQ;AACtQ,uDAAuD;AACvD,2CAA2C;AAC3C,eAAe;AACf,OAAO;AACP,MAAM;AACN,eAAe;AACf,gCAAgC;AAChC,+BAA+B;AAC/B,yCAAyC;AACzC,gCAAgC;AAChC,kNAAkN;AAClN,uDAAuD;AACvD,+CAA+C;AAC/C,eAAe;AACf,MAAM;AACN,KAAK;AAEL,WAAW;AACX,8CAA8C;AAE9C,yEAAyE;AACzE,0EAA0E;AAC1E,oDAAoD;AACpD,iGAAiG;AACjG,+EAA+E;AAE/E,wFAAwF;AACxF,4DAA4D;AAE5D,kDAAkD;AAClD,uDAAuD;AACvD,oCAAoC;AACpC,sFAAsF;AACtF,gDAAgD;AAChD,eAAe;AACf,yDAAyD;AACzD,QAAQ;AACR,OAAO;AAEP,yDAAyD;AACzD,gEAAgE;AAChE,OAAO;AAEP,yDAAyD;AACzD,iCAAiC;AACjC,iCAAiC;AACjC,OAAO;AAEP,qHAAqH;AACrH,wDAAwD;AACxD,4HAA4H;AAC5H,4BAA4B;AAC5B,OAAO;AAEP,mCAAmC;AACnC,+BAA+B;AAC/B,sCAAsC;AACtC,gBAAgB;AAChB,QAAQ;AACR,iCAAiC;AACjC,OAAO;AAEP,8HAA8H;AAC9H,2DAA2D;AAC3D,uEAAuE;AACvE,+JAA+J;AAC/J,mBAAmB;AACnB,4BAA4B;AAC5B,OAAO;AAEP,4CAA4C;AAC5C,gEAAgE;AAChE,gBAAgB;AAEhB,aAAa;AACb,gEAAgE;AAChE,0FAA0F;AAE1F,qCAAqC;AACrC,+EAA+E;AAC/E,uDAAuD;AACvD,iGAAiG;AACjG,sFAAsF;AACtF,2HAA2H;AAC3H,uBAAuB;AACvB,qBAAqB;AACrB,iBAAiB;AACjB,qHAAqH;AACrH,gBAAgB;AAEhB,kBAAkB;AAClB,sBAAsB;AACtB,kDAAkD;AAClD,sCAAsC;AACtC,0CAA0C;AAC1C,+CAA+C;AAC/C,WAAW;AAEX,4BAA4B;AAC5B,6CAA6C;AAC7C,+CAA+C;AAC/C,kCAAkC;AAClC,yCAAyC;AACzC,WAAW;AAEX,sBAAsB;AACtB,6CAA6C;AAC7C,+CAA+C;AAC/C,mCAAmC;AACnC,yCAAyC;AACzC,WAAW;AAEX,mBAAmB;AACnB,aAAa;AACb,OAAO;AACP,KAAK;AAEL,6BAA6B;AAC7B,eAAe;;;;;AAEf;AACA,+TAAqC,wCAAwC;AAE7E,oBAAoB;AAGpB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjBA;;;;;;;;;;;;;AAmBA,MAAM,aAAa;;IACjB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,sHAAA,CAAA,qBAAkB;IACnE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE,GAAG,iCAAiC;IAClG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqD,OAAO,kBAAkB;IAC3H,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,oBAAoB;IAE/F,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,EAAE,GAAG;YAC7C,QAAQ;mBAAI;gBAAM;aAAO;YACzB,MAAM,GAAG,OAAO,IAAI,CAAC,eAAe,CAAC;QACvC,OAAO;YACL,MAAM,GAAG,OAAO,IAAI,CAAC,wBAAwB,CAAC;QAChD;IACF;IAEA,MAAM,uBAAuB,CAAC;QAC5B,QAAQ,KAAK,MAAM,CAAC,CAAC,SAAW,OAAO,EAAE,KAAK;IAChD;IAEA,MAAM,yBAAyB,CAAC;QAC9B,kBAAkB;QAClB,eAAe;IACjB;IAEA,uCAAuC;IACvC,MAAM,sBAAsB,CAAC;QAC3B,MAAM,WAAsB;YAC1B,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT,YAAY,SAAS,UAAU;YAC/B,WAAW,SAAS,KAAK;YACzB,UAAU,SAAS,IAAI;YACvB,SAAS,SAAS,OAAO;YACzB,WAAW,IAAI,OAAO,WAAW;YACjC,QAAQ;QACV;QACA,eAAe,CAAA,cAAe;mBAAI;gBAAa;aAAS;QAExD,6DAA6D;QAC7D,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,kBAAkB;QAC9B,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,sHAAA,CAAA,qBAAkB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,SAAS,QAAQ,GAAG,gBAAgB,kBAAkB;QAC9I,kDAAkD;QAClD,6BAA6B;QAC7B,oBAAoB;QACpB,qDAAqD;QACrD,oCAAoC;QACpC,KAAK;QACL,qCAAqC;QACrC,kBAAkB;QAClB,wBAAwB;QACxB,0EAA0E;QAC1E,uGAAuG;QACvG,aAAa;QACb,mGAAmG;QACnG,MAAM;QACN,sBAAsB;QACtB,+DAA+D;QAC/D,iGAAiG;QACjG,MAAM;QACN,mDAAmD;QAGnD,MAAM,CAAC,gBAAgB,EAAE,SAAS,UAAU,CAAC,sBAAsB,EAAE,SAAS,IAAI,CAAC,aAAa,CAAC;QACjG,eAAe;IACjB;IAEA,MAAM,iBAAiB;QACrB,IAAI,KAAK,MAAM,KAAK,GAAG;YACrB,MAAM;YACN;QACF;QACA,eAAe,YAAY,qBAAqB;IAClD;IAEA,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,2BAA2B;QACvC,MAAM,cAAc,KAAK,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,IAAI,GAAG,EAAE;QAC7D,MAAM,CAAC,YAAY,EAAE,YAAY,OAAO,CAAC,GAAG,gBAAgB,EAAE,YAAY,QAAQ,CAAC,gDAAgD,CAAC;QACpI,QAAQ,EAAE,GAAG,sCAAsC;QACnD,eAAe;IACjB;IAEA,MAAM,4BAA4B,CAAC,SAAiB;QAClD,eAAe,CAAA,cACb,YAAY,GAAG,CAAC,CAAA,QACd,MAAM,EAAE,KAAK,UACT;oBAAE,GAAG,KAAK;oBAAE,QAAQ;oBAA8B,aAAa;gBAAa,IAC5E;QAGR,MAAM;IACN,gFAAgF;IAClF;IAEA,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAAE;YAC9B,OAAO,KAAK,MAAM;uDAAC,CAAC,KAAK,SAAW,MAAM,OAAO,GAAG;sDAAE;QACxD;8CAAG;QAAC;KAAK;IAET,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,mIAAA,CAAA,UAAM;gBAAC,eAAe,KAAK,MAAM;gBAAE,aAAa,IAAM,eAAe;;;;;;0BAEtE,6LAAC;gBAAK,WAAU;;kCACd,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAG,WAAU;8CAA2C;;;;;;8CACzD,6LAAC;oCAAE,WAAU;8CAAsD;;;;;;;;;;;;;;;;;kCAK3E,6LAAC,gJAAA,CAAA,UAAmB;wBAAC,SAAS;wBAAS,aAAa;wBAAiB,WAAW;;;;;;kCAGhF,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,6LAAC;oCACG,SAAS,IAAM,eAAe;oCAC9B,WAAU;;sDAEV,6LAAC,qMAAA,CAAA,OAAI;4CAAC,MAAM;;;;;;sDACZ,6LAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMpB,6LAAC,0HAAA,CAAA,UAAQ;gBACP,MAAM;gBACN,kBAAkB;gBAClB,YAAY;gBACZ,QAAQ,gBAAgB;gBACxB,SAAS,IAAM,eAAe;;;;;;0BAGhC,6LAAC,+IAAA,CAAA,UAAkB;gBACjB,QAAQ,gBAAgB;gBACxB,SAAS,IAAM,eAAe;gBAC9B,QAAQ;gBACR,UAAU;;;;;;0BAGZ,6LAAC,8HAAA,CAAA,UAAY;gBACX,QAAQ,gBAAgB;gBACxB,SAAS,IAAM,eAAe;gBAC9B,QAAQ;gBACR,UAAU;;;;;;0BAIZ,6LAAC,uHAAA,CAAA,UAAK;gBACJ,QAAQ,gBAAgB;gBACxB,SAAS,IAAM,eAAe;gBAC9B,OAAM;0BAEN,cAAA,6LAAC,6IAAA,CAAA,UAA2B;oBAC1B,aAAa;oBACb,uBAAuB;;;;;;;;;;;0BAI3B,6LAAC,kIAAA,CAAA,UAAM;;;;;;;;;;;AAGb;GAtKM;KAAA;uCAwKS","debugId":null}},
    {"offset": {"line": 2556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}